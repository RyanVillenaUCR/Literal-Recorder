
LiteralRecorder0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000276  00800100  0000105c  00001110  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000105c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800376  00800376  00001386  2**0
                  ALLOC
  3 .eeprom       00000040  00810000  00810000  00001386  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000030  00000000  00000000  000013c6  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  000013f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001735  00000000  00000000  0000155e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003b4  00000000  00000000  00002c93  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cf5  00000000  00000000  00003047  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000418  00000000  00000000  00003d3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ad  00000000  00000000  00004154  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000155d  00000000  00000000  00004801  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00005d5e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
       6:	00 00       	nop
       8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
       a:	00 00       	nop
       c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
       e:	00 00       	nop
      10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
      12:	00 00       	nop
      14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
      16:	00 00       	nop
      18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
      22:	00 00       	nop
      24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
      26:	00 00       	nop
      28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
      32:	00 00       	nop
      34:	be c1       	rjmp	.+892    	; 0x3b2 <__vector_13>
      36:	00 00       	nop
      38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
      42:	00 00       	nop
      44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
      46:	00 00       	nop
      48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
      52:	00 00       	nop
      54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
      56:	00 00       	nop
      58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
      62:	00 00       	nop
      64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
      66:	00 00       	nop
      68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
      72:	00 00       	nop
      74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
      76:	00 00       	nop
      78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
      82:	00 00       	nop
      84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
      86:	00 00       	nop
      88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	13 e0       	ldi	r17, 0x03	; 3
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec e5       	ldi	r30, 0x5C	; 92
      a0:	f0 e1       	ldi	r31, 0x10	; 16
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a6 37       	cpi	r26, 0x76	; 118
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	23 e0       	ldi	r18, 0x03	; 3
      b4:	a6 e7       	ldi	r26, 0x76	; 118
      b6:	b3 e0       	ldi	r27, 0x03	; 3
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a3 38       	cpi	r26, 0x83	; 131
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	8c d3       	rcall	.+1816   	; 0x7dc <main>
      c4:	c9 c7       	rjmp	.+3986   	; 0x1058 <_exit>

000000c6 <__bad_interrupt>:
      c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <getJoystickDiscrete>:
        case DOWN_HI:
        LCD_DisplayString(17, "DOWN HI");
        break;
        
        default:
        LCD_DisplayString(17, "InvalidInput");
      c8:	80 93 7c 00 	sts	0x007C, r24
      cc:	80 91 78 00 	lds	r24, 0x0078
      d0:	90 91 79 00 	lds	r25, 0x0079
      d4:	9c 01       	movw	r18, r24
      d6:	2e 5c       	subi	r18, 0xCE	; 206
      d8:	31 40       	sbci	r19, 0x01	; 1
      da:	25 36       	cpi	r18, 0x65	; 101
      dc:	31 05       	cpc	r19, r1
      de:	a0 f0       	brcs	.+40     	; 0x108 <getJoystickDiscrete+0x40>
      e0:	26 50       	subi	r18, 0x06	; 6
      e2:	3f 4f       	sbci	r19, 0xFF	; 255
      e4:	2a 3f       	cpi	r18, 0xFA	; 250
      e6:	31 05       	cpc	r19, r1
      e8:	88 f0       	brcs	.+34     	; 0x10c <getJoystickDiscrete+0x44>
      ea:	84 3d       	cpi	r24, 0xD4	; 212
      ec:	91 05       	cpc	r25, r1
      ee:	80 f0       	brcs	.+32     	; 0x110 <getJoystickDiscrete+0x48>
      f0:	2f 55       	subi	r18, 0x5F	; 95
      f2:	31 40       	sbci	r19, 0x01	; 1
      f4:	2a 3f       	cpi	r18, 0xFA	; 250
      f6:	31 05       	cpc	r19, r1
      f8:	68 f0       	brcs	.+26     	; 0x114 <getJoystickDiscrete+0x4c>
      fa:	8d 52       	subi	r24, 0x2D	; 45
      fc:	93 40       	sbci	r25, 0x03	; 3
      fe:	83 3d       	cpi	r24, 0xD3	; 211
     100:	91 05       	cpc	r25, r1
     102:	50 f4       	brcc	.+20     	; 0x118 <getJoystickDiscrete+0x50>
     104:	83 e0       	ldi	r24, 0x03	; 3
     106:	08 95       	ret
     108:	80 e0       	ldi	r24, 0x00	; 0
     10a:	08 95       	ret
     10c:	84 e0       	ldi	r24, 0x04	; 4
     10e:	08 95       	ret
     110:	82 e0       	ldi	r24, 0x02	; 2
     112:	08 95       	ret
     114:	81 e0       	ldi	r24, 0x01	; 1
     116:	08 95       	ret
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	08 95       	ret

0000011c <concat_and_alloc>:
     11c:	ef 92       	push	r14
     11e:	ff 92       	push	r15
     120:	0f 93       	push	r16
     122:	1f 93       	push	r17
     124:	cf 93       	push	r28
     126:	df 93       	push	r29
     128:	7c 01       	movw	r14, r24
     12a:	8b 01       	movw	r16, r22
     12c:	fc 01       	movw	r30, r24
     12e:	01 90       	ld	r0, Z+
     130:	00 20       	and	r0, r0
     132:	e9 f7       	brne	.-6      	; 0x12e <concat_and_alloc+0x12>
     134:	31 97       	sbiw	r30, 0x01	; 1
     136:	9f 01       	movw	r18, r30
     138:	28 1b       	sub	r18, r24
     13a:	39 0b       	sbc	r19, r25
     13c:	fb 01       	movw	r30, r22
     13e:	01 90       	ld	r0, Z+
     140:	00 20       	and	r0, r0
     142:	e9 f7       	brne	.-6      	; 0x13e <concat_and_alloc+0x22>
     144:	31 97       	sbiw	r30, 0x01	; 1
     146:	cf 01       	movw	r24, r30
     148:	86 1b       	sub	r24, r22
     14a:	97 0b       	sbc	r25, r23
     14c:	82 0f       	add	r24, r18
     14e:	93 1f       	adc	r25, r19
     150:	01 96       	adiw	r24, 0x01	; 1
     152:	11 d6       	rcall	.+3106   	; 0xd76 <malloc>
     154:	ec 01       	movw	r28, r24
     156:	b7 01       	movw	r22, r14
     158:	47 d7       	rcall	.+3726   	; 0xfe8 <strcpy>
     15a:	b8 01       	movw	r22, r16
     15c:	ce 01       	movw	r24, r28
     15e:	39 d7       	rcall	.+3698   	; 0xfd2 <strcat>
     160:	ce 01       	movw	r24, r28
     162:	df 91       	pop	r29
     164:	cf 91       	pop	r28
     166:	1f 91       	pop	r17
     168:	0f 91       	pop	r16
     16a:	ff 90       	pop	r15
     16c:	ef 90       	pop	r14
     16e:	08 95       	ret

00000170 <delay_ms>:
     170:	18 16       	cp	r1, r24
     172:	19 06       	cpc	r1, r25
     174:	9c f4       	brge	.+38     	; 0x19c <delay_ms+0x2c>
     176:	40 e0       	ldi	r20, 0x00	; 0
     178:	50 e0       	ldi	r21, 0x00	; 0
     17a:	77 e0       	ldi	r23, 0x07	; 7
     17c:	63 e0       	ldi	r22, 0x03	; 3
     17e:	0b c0       	rjmp	.+22     	; 0x196 <delay_ms+0x26>
     180:	00 00       	nop
     182:	21 50       	subi	r18, 0x01	; 1
     184:	31 09       	sbc	r19, r1
     186:	21 15       	cp	r18, r1
     188:	31 05       	cpc	r19, r1
     18a:	d1 f7       	brne	.-12     	; 0x180 <delay_ms+0x10>
     18c:	4f 5f       	subi	r20, 0xFF	; 255
     18e:	5f 4f       	sbci	r21, 0xFF	; 255
     190:	48 17       	cp	r20, r24
     192:	59 07       	cpc	r21, r25
     194:	19 f0       	breq	.+6      	; 0x19c <delay_ms+0x2c>
     196:	27 2f       	mov	r18, r23
     198:	36 2f       	mov	r19, r22
     19a:	f2 cf       	rjmp	.-28     	; 0x180 <delay_ms+0x10>
     19c:	08 95       	ret

0000019e <LCD_WriteCommand>:
     19e:	5e 98       	cbi	0x0b, 6	; 11
     1a0:	88 b9       	out	0x08, r24	; 8
     1a2:	5f 9a       	sbi	0x0b, 7	; 11
     1a4:	00 00       	nop
     1a6:	5f 98       	cbi	0x0b, 7	; 11
     1a8:	82 e0       	ldi	r24, 0x02	; 2
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	e1 cf       	rjmp	.-62     	; 0x170 <delay_ms>
     1ae:	08 95       	ret

000001b0 <LCD_ClearScreen>:
     1b0:	81 e0       	ldi	r24, 0x01	; 1
     1b2:	f5 cf       	rjmp	.-22     	; 0x19e <LCD_WriteCommand>
     1b4:	08 95       	ret

000001b6 <LCD_init>:
     1b6:	84 e6       	ldi	r24, 0x64	; 100
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	da df       	rcall	.-76     	; 0x170 <delay_ms>
     1bc:	88 e3       	ldi	r24, 0x38	; 56
     1be:	ef df       	rcall	.-34     	; 0x19e <LCD_WriteCommand>
     1c0:	86 e0       	ldi	r24, 0x06	; 6
     1c2:	ed df       	rcall	.-38     	; 0x19e <LCD_WriteCommand>
     1c4:	8f e0       	ldi	r24, 0x0F	; 15
     1c6:	eb df       	rcall	.-42     	; 0x19e <LCD_WriteCommand>
     1c8:	81 e0       	ldi	r24, 0x01	; 1
     1ca:	e9 df       	rcall	.-46     	; 0x19e <LCD_WriteCommand>
     1cc:	8a e0       	ldi	r24, 0x0A	; 10
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	cf cf       	rjmp	.-98     	; 0x170 <delay_ms>
     1d2:	08 95       	ret

000001d4 <LCD_WriteData>:
     1d4:	5e 9a       	sbi	0x0b, 6	; 11
     1d6:	88 b9       	out	0x08, r24	; 8
     1d8:	5f 9a       	sbi	0x0b, 7	; 11
     1da:	00 00       	nop
     1dc:	5f 98       	cbi	0x0b, 7	; 11
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	c6 cf       	rjmp	.-116    	; 0x170 <delay_ms>
     1e4:	08 95       	ret

000001e6 <LCD_Cursor>:
     1e6:	81 31       	cpi	r24, 0x11	; 17
     1e8:	18 f4       	brcc	.+6      	; 0x1f0 <LCD_Cursor+0xa>
     1ea:	81 58       	subi	r24, 0x81	; 129
     1ec:	d8 cf       	rjmp	.-80     	; 0x19e <LCD_WriteCommand>
     1ee:	08 95       	ret
     1f0:	81 55       	subi	r24, 0x51	; 81
     1f2:	d5 cf       	rjmp	.-86     	; 0x19e <LCD_WriteCommand>
     1f4:	08 95       	ret

000001f6 <LCD_DisplayString>:
     1f6:	0f 93       	push	r16
     1f8:	1f 93       	push	r17
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	18 2f       	mov	r17, r24
     200:	eb 01       	movw	r28, r22
     202:	d6 df       	rcall	.-84     	; 0x1b0 <LCD_ClearScreen>
     204:	88 81       	ld	r24, Y
     206:	88 23       	and	r24, r24
     208:	59 f0       	breq	.+22     	; 0x220 <LCD_DisplayString+0x2a>
     20a:	01 e0       	ldi	r16, 0x01	; 1
     20c:	01 0f       	add	r16, r17
     20e:	81 2f       	mov	r24, r17
     210:	ea df       	rcall	.-44     	; 0x1e6 <LCD_Cursor>
     212:	89 91       	ld	r24, Y+
     214:	df df       	rcall	.-66     	; 0x1d4 <LCD_WriteData>
     216:	88 81       	ld	r24, Y
     218:	88 23       	and	r24, r24
     21a:	11 f0       	breq	.+4      	; 0x220 <LCD_DisplayString+0x2a>
     21c:	10 2f       	mov	r17, r16
     21e:	f5 cf       	rjmp	.-22     	; 0x20a <LCD_DisplayString+0x14>
     220:	df 91       	pop	r29
     222:	cf 91       	pop	r28
     224:	1f 91       	pop	r17
     226:	0f 91       	pop	r16
     228:	08 95       	ret

0000022a <LCD_displayTwoLines>:
     22a:	af 92       	push	r10
     22c:	bf 92       	push	r11
     22e:	cf 92       	push	r12
     230:	df 92       	push	r13
     232:	ef 92       	push	r14
     234:	ff 92       	push	r15
     236:	0f 93       	push	r16
     238:	1f 93       	push	r17
     23a:	cf 93       	push	r28
     23c:	df 93       	push	r29
     23e:	ec 01       	movw	r28, r24
     240:	8b 01       	movw	r16, r22
     242:	fc 01       	movw	r30, r24
     244:	01 90       	ld	r0, Z+
     246:	00 20       	and	r0, r0
     248:	e9 f7       	brne	.-6      	; 0x244 <LCD_displayTwoLines+0x1a>
     24a:	31 97       	sbiw	r30, 0x01	; 1
     24c:	e8 1b       	sub	r30, r24
     24e:	f9 0b       	sbc	r31, r25
     250:	e1 31       	cpi	r30, 0x11	; 17
     252:	f1 05       	cpc	r31, r1
     254:	28 f0       	brcs	.+10     	; 0x260 <LCD_displayTwoLines+0x36>
     256:	61 e8       	ldi	r22, 0x81	; 129
     258:	71 e0       	ldi	r23, 0x01	; 1
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	cc df       	rcall	.-104    	; 0x1f6 <LCD_DisplayString>
     25e:	3d c0       	rjmp	.+122    	; 0x2da <LCD_displayTwoLines+0xb0>
     260:	db 01       	movw	r26, r22
     262:	0d 90       	ld	r0, X+
     264:	00 20       	and	r0, r0
     266:	e9 f7       	brne	.-6      	; 0x262 <LCD_displayTwoLines+0x38>
     268:	11 97       	sbiw	r26, 0x01	; 1
     26a:	a6 1b       	sub	r26, r22
     26c:	b7 0b       	sbc	r27, r23
     26e:	51 97       	sbiw	r26, 0x11	; 17
     270:	28 f0       	brcs	.+10     	; 0x27c <LCD_displayTwoLines+0x52>
     272:	60 e9       	ldi	r22, 0x90	; 144
     274:	71 e0       	ldi	r23, 0x01	; 1
     276:	81 e0       	ldi	r24, 0x01	; 1
     278:	be df       	rcall	.-132    	; 0x1f6 <LCD_DisplayString>
     27a:	2f c0       	rjmp	.+94     	; 0x2da <LCD_displayTwoLines+0xb0>
     27c:	80 e1       	ldi	r24, 0x10	; 16
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	7c 01       	movw	r14, r24
     282:	ee 1a       	sub	r14, r30
     284:	ff 0a       	sbc	r15, r31
     286:	09 f1       	breq	.+66     	; 0x2ca <LCD_displayTwoLines+0xa0>
     288:	81 e1       	ldi	r24, 0x11	; 17
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	5c 01       	movw	r10, r24
     28e:	ae 1a       	sub	r10, r30
     290:	bf 0a       	sbc	r11, r31
     292:	c5 01       	movw	r24, r10
     294:	70 d5       	rcall	.+2784   	; 0xd76 <malloc>
     296:	6c 01       	movw	r12, r24
     298:	a5 01       	movw	r20, r10
     29a:	60 e2       	ldi	r22, 0x20	; 32
     29c:	70 e0       	ldi	r23, 0x00	; 0
     29e:	92 d6       	rcall	.+3364   	; 0xfc4 <memset>
     2a0:	f6 01       	movw	r30, r12
     2a2:	ee 0d       	add	r30, r14
     2a4:	ff 1d       	adc	r31, r15
     2a6:	10 82       	st	Z, r1
     2a8:	b6 01       	movw	r22, r12
     2aa:	ce 01       	movw	r24, r28
     2ac:	37 df       	rcall	.-402    	; 0x11c <concat_and_alloc>
     2ae:	7c 01       	movw	r14, r24
     2b0:	b8 01       	movw	r22, r16
     2b2:	34 df       	rcall	.-408    	; 0x11c <concat_and_alloc>
     2b4:	ec 01       	movw	r28, r24
     2b6:	bc 01       	movw	r22, r24
     2b8:	81 e0       	ldi	r24, 0x01	; 1
     2ba:	9d df       	rcall	.-198    	; 0x1f6 <LCD_DisplayString>
     2bc:	c7 01       	movw	r24, r14
     2be:	f3 d5       	rcall	.+3046   	; 0xea6 <free>
     2c0:	ce 01       	movw	r24, r28
     2c2:	f1 d5       	rcall	.+3042   	; 0xea6 <free>
     2c4:	c6 01       	movw	r24, r12
     2c6:	ef d5       	rcall	.+3038   	; 0xea6 <free>
     2c8:	08 c0       	rjmp	.+16     	; 0x2da <LCD_displayTwoLines+0xb0>
     2ca:	ce 01       	movw	r24, r28
     2cc:	27 df       	rcall	.-434    	; 0x11c <concat_and_alloc>
     2ce:	ec 01       	movw	r28, r24
     2d0:	bc 01       	movw	r22, r24
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	90 df       	rcall	.-224    	; 0x1f6 <LCD_DisplayString>
     2d6:	ce 01       	movw	r24, r28
     2d8:	e6 d5       	rcall	.+3020   	; 0xea6 <free>
     2da:	df 91       	pop	r29
     2dc:	cf 91       	pop	r28
     2de:	1f 91       	pop	r17
     2e0:	0f 91       	pop	r16
     2e2:	ff 90       	pop	r15
     2e4:	ef 90       	pop	r14
     2e6:	df 90       	pop	r13
     2e8:	cf 90       	pop	r12
     2ea:	bf 90       	pop	r11
     2ec:	af 90       	pop	r10
     2ee:	08 95       	ret

000002f0 <LCDBuildChar>:
     2f0:	0f 93       	push	r16
     2f2:	1f 93       	push	r17
     2f4:	cf 93       	push	r28
     2f6:	df 93       	push	r29
     2f8:	06 2f       	mov	r16, r22
     2fa:	17 2f       	mov	r17, r23
     2fc:	88 30       	cpi	r24, 0x08	; 8
     2fe:	60 f4       	brcc	.+24     	; 0x318 <LCDBuildChar+0x28>
     300:	88 0f       	add	r24, r24
     302:	88 0f       	add	r24, r24
     304:	88 0f       	add	r24, r24
     306:	80 5c       	subi	r24, 0xC0	; 192
     308:	4a df       	rcall	.-364    	; 0x19e <LCD_WriteCommand>
     30a:	c0 2f       	mov	r28, r16
     30c:	d1 2f       	mov	r29, r17
     30e:	18 e0       	ldi	r17, 0x08	; 8
     310:	89 91       	ld	r24, Y+
     312:	60 df       	rcall	.-320    	; 0x1d4 <LCD_WriteData>
     314:	11 50       	subi	r17, 0x01	; 1
     316:	e1 f7       	brne	.-8      	; 0x310 <LCDBuildChar+0x20>
     318:	80 e8       	ldi	r24, 0x80	; 128
     31a:	41 df       	rcall	.-382    	; 0x19e <LCD_WriteCommand>
     31c:	df 91       	pop	r29
     31e:	cf 91       	pop	r28
     320:	1f 91       	pop	r17
     322:	0f 91       	pop	r16
     324:	08 95       	ret

00000326 <LCD_WriteSubstring>:
     326:	ff 92       	push	r15
     328:	0f 93       	push	r16
     32a:	1f 93       	push	r17
     32c:	cf 93       	push	r28
     32e:	df 93       	push	r29
     330:	f8 2e       	mov	r15, r24
     332:	eb 01       	movw	r28, r22
     334:	8b 01       	movw	r16, r22
     336:	04 0f       	add	r16, r20
     338:	15 1f       	adc	r17, r21
     33a:	60 17       	cp	r22, r16
     33c:	71 07       	cpc	r23, r17
     33e:	78 f4       	brcc	.+30     	; 0x35e <LCD_WriteSubstring+0x38>
     340:	88 81       	ld	r24, Y
     342:	81 11       	cpse	r24, r1
     344:	04 c0       	rjmp	.+8      	; 0x34e <LCD_WriteSubstring+0x28>
     346:	0b c0       	rjmp	.+22     	; 0x35e <LCD_WriteSubstring+0x38>
     348:	88 81       	ld	r24, Y
     34a:	88 23       	and	r24, r24
     34c:	41 f0       	breq	.+16     	; 0x35e <LCD_WriteSubstring+0x38>
     34e:	8f 2d       	mov	r24, r15
     350:	4a df       	rcall	.-364    	; 0x1e6 <LCD_Cursor>
     352:	89 91       	ld	r24, Y+
     354:	3f df       	rcall	.-386    	; 0x1d4 <LCD_WriteData>
     356:	f3 94       	inc	r15
     358:	c0 17       	cp	r28, r16
     35a:	d1 07       	cpc	r29, r17
     35c:	a9 f7       	brne	.-22     	; 0x348 <LCD_WriteSubstring+0x22>
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	1f 91       	pop	r17
     364:	0f 91       	pop	r16
     366:	ff 90       	pop	r15
     368:	08 95       	ret

0000036a <TimerOn>:
     36a:	8b e0       	ldi	r24, 0x0B	; 11
     36c:	80 93 81 00 	sts	0x0081, r24
     370:	8d e7       	ldi	r24, 0x7D	; 125
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	90 93 89 00 	sts	0x0089, r25
     378:	80 93 88 00 	sts	0x0088, r24
     37c:	82 e0       	ldi	r24, 0x02	; 2
     37e:	80 93 6f 00 	sts	0x006F, r24
     382:	10 92 85 00 	sts	0x0085, r1
     386:	10 92 84 00 	sts	0x0084, r1
     38a:	80 91 4c 01 	lds	r24, 0x014C
     38e:	90 91 4d 01 	lds	r25, 0x014D
     392:	a0 91 4e 01 	lds	r26, 0x014E
     396:	b0 91 4f 01 	lds	r27, 0x014F
     39a:	80 93 7a 03 	sts	0x037A, r24
     39e:	90 93 7b 03 	sts	0x037B, r25
     3a2:	a0 93 7c 03 	sts	0x037C, r26
     3a6:	b0 93 7d 03 	sts	0x037D, r27
     3aa:	8f b7       	in	r24, 0x3f	; 63
     3ac:	80 68       	ori	r24, 0x80	; 128
     3ae:	8f bf       	out	0x3f, r24	; 63
     3b0:	08 95       	ret

000003b2 <__vector_13>:
     3b2:	1f 92       	push	r1
     3b4:	0f 92       	push	r0
     3b6:	0f b6       	in	r0, 0x3f	; 63
     3b8:	0f 92       	push	r0
     3ba:	11 24       	eor	r1, r1
     3bc:	8f 93       	push	r24
     3be:	9f 93       	push	r25
     3c0:	af 93       	push	r26
     3c2:	bf 93       	push	r27
     3c4:	80 91 7a 03 	lds	r24, 0x037A
     3c8:	90 91 7b 03 	lds	r25, 0x037B
     3cc:	a0 91 7c 03 	lds	r26, 0x037C
     3d0:	b0 91 7d 03 	lds	r27, 0x037D
     3d4:	01 97       	sbiw	r24, 0x01	; 1
     3d6:	a1 09       	sbc	r26, r1
     3d8:	b1 09       	sbc	r27, r1
     3da:	80 93 7a 03 	sts	0x037A, r24
     3de:	90 93 7b 03 	sts	0x037B, r25
     3e2:	a0 93 7c 03 	sts	0x037C, r26
     3e6:	b0 93 7d 03 	sts	0x037D, r27
     3ea:	89 2b       	or	r24, r25
     3ec:	8a 2b       	or	r24, r26
     3ee:	8b 2b       	or	r24, r27
     3f0:	99 f4       	brne	.+38     	; 0x418 <__vector_13+0x66>
     3f2:	81 e0       	ldi	r24, 0x01	; 1
     3f4:	80 93 7e 03 	sts	0x037E, r24
     3f8:	80 91 4c 01 	lds	r24, 0x014C
     3fc:	90 91 4d 01 	lds	r25, 0x014D
     400:	a0 91 4e 01 	lds	r26, 0x014E
     404:	b0 91 4f 01 	lds	r27, 0x014F
     408:	80 93 7a 03 	sts	0x037A, r24
     40c:	90 93 7b 03 	sts	0x037B, r25
     410:	a0 93 7c 03 	sts	0x037C, r26
     414:	b0 93 7d 03 	sts	0x037D, r27
     418:	bf 91       	pop	r27
     41a:	af 91       	pop	r26
     41c:	9f 91       	pop	r25
     41e:	8f 91       	pop	r24
     420:	0f 90       	pop	r0
     422:	0f be       	out	0x3f, r0	; 63
     424:	0f 90       	pop	r0
     426:	1f 90       	pop	r1
     428:	18 95       	reti

0000042a <set_PWM>:
     42a:	cf 92       	push	r12
     42c:	df 92       	push	r13
     42e:	ef 92       	push	r14
     430:	ff 92       	push	r15
     432:	6b 01       	movw	r12, r22
     434:	7c 01       	movw	r14, r24
     436:	20 91 76 03 	lds	r18, 0x0376
     43a:	30 91 77 03 	lds	r19, 0x0377
     43e:	40 91 78 03 	lds	r20, 0x0378
     442:	50 91 79 03 	lds	r21, 0x0379
     446:	e1 d2       	rcall	.+1474   	; 0xa0a <__cmpsf2>
     448:	88 23       	and	r24, r24
     44a:	09 f4       	brne	.+2      	; 0x44e <set_PWM+0x24>
     44c:	52 c0       	rjmp	.+164    	; 0x4f2 <set_PWM+0xc8>
     44e:	20 e0       	ldi	r18, 0x00	; 0
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	a9 01       	movw	r20, r18
     454:	c7 01       	movw	r24, r14
     456:	b6 01       	movw	r22, r12
     458:	d8 d2       	rcall	.+1456   	; 0xa0a <__cmpsf2>
     45a:	81 11       	cpse	r24, r1
     45c:	06 c0       	rjmp	.+12     	; 0x46a <set_PWM+0x40>
     45e:	e1 e9       	ldi	r30, 0x91	; 145
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	80 81       	ld	r24, Z
     464:	88 70       	andi	r24, 0x08	; 8
     466:	80 83       	st	Z, r24
     468:	05 c0       	rjmp	.+10     	; 0x474 <set_PWM+0x4a>
     46a:	e1 e9       	ldi	r30, 0x91	; 145
     46c:	f0 e0       	ldi	r31, 0x00	; 0
     46e:	80 81       	ld	r24, Z
     470:	83 60       	ori	r24, 0x03	; 3
     472:	80 83       	st	Z, r24
     474:	28 e5       	ldi	r18, 0x58	; 88
     476:	39 e3       	ldi	r19, 0x39	; 57
     478:	44 e7       	ldi	r20, 0x74	; 116
     47a:	5f e3       	ldi	r21, 0x3F	; 63
     47c:	c7 01       	movw	r24, r14
     47e:	b6 01       	movw	r22, r12
     480:	c4 d2       	rcall	.+1416   	; 0xa0a <__cmpsf2>
     482:	88 23       	and	r24, r24
     484:	3c f4       	brge	.+14     	; 0x494 <set_PWM+0x6a>
     486:	8f ef       	ldi	r24, 0xFF	; 255
     488:	9f ef       	ldi	r25, 0xFF	; 255
     48a:	90 93 99 00 	sts	0x0099, r25
     48e:	80 93 98 00 	sts	0x0098, r24
     492:	23 c0       	rjmp	.+70     	; 0x4da <set_PWM+0xb0>
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	34 e2       	ldi	r19, 0x24	; 36
     498:	44 ef       	ldi	r20, 0xF4	; 244
     49a:	56 e4       	ldi	r21, 0x46	; 70
     49c:	c7 01       	movw	r24, r14
     49e:	b6 01       	movw	r22, r12
     4a0:	03 d4       	rcall	.+2054   	; 0xca8 <__gesf2>
     4a2:	18 16       	cp	r1, r24
     4a4:	2c f4       	brge	.+10     	; 0x4b0 <set_PWM+0x86>
     4a6:	10 92 99 00 	sts	0x0099, r1
     4aa:	10 92 98 00 	sts	0x0098, r1
     4ae:	15 c0       	rjmp	.+42     	; 0x4da <set_PWM+0xb0>
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	40 e0       	ldi	r20, 0x00	; 0
     4b6:	53 e4       	ldi	r21, 0x43	; 67
     4b8:	c7 01       	movw	r24, r14
     4ba:	b6 01       	movw	r22, r12
     4bc:	f9 d3       	rcall	.+2034   	; 0xcb0 <__mulsf3>
     4be:	9b 01       	movw	r18, r22
     4c0:	ac 01       	movw	r20, r24
     4c2:	60 e0       	ldi	r22, 0x00	; 0
     4c4:	74 e2       	ldi	r23, 0x24	; 36
     4c6:	84 ef       	ldi	r24, 0xF4	; 244
     4c8:	9a e4       	ldi	r25, 0x4A	; 74
     4ca:	a3 d2       	rcall	.+1350   	; 0xa12 <__divsf3>
     4cc:	0a d3       	rcall	.+1556   	; 0xae2 <__fixsfsi>
     4ce:	61 50       	subi	r22, 0x01	; 1
     4d0:	71 09       	sbc	r23, r1
     4d2:	70 93 99 00 	sts	0x0099, r23
     4d6:	60 93 98 00 	sts	0x0098, r22
     4da:	10 92 95 00 	sts	0x0095, r1
     4de:	10 92 94 00 	sts	0x0094, r1
     4e2:	c0 92 76 03 	sts	0x0376, r12
     4e6:	d0 92 77 03 	sts	0x0377, r13
     4ea:	e0 92 78 03 	sts	0x0378, r14
     4ee:	f0 92 79 03 	sts	0x0379, r15
     4f2:	ff 90       	pop	r15
     4f4:	ef 90       	pop	r14
     4f6:	df 90       	pop	r13
     4f8:	cf 90       	pop	r12
     4fa:	08 95       	ret

000004fc <PWM_on>:
     4fc:	80 e4       	ldi	r24, 0x40	; 64
     4fe:	80 93 90 00 	sts	0x0090, r24
     502:	8b e0       	ldi	r24, 0x0B	; 11
     504:	80 93 91 00 	sts	0x0091, r24
     508:	60 e0       	ldi	r22, 0x00	; 0
     50a:	70 e0       	ldi	r23, 0x00	; 0
     50c:	cb 01       	movw	r24, r22
     50e:	8d cf       	rjmp	.-230    	; 0x42a <set_PWM>
     510:	08 95       	ret

00000512 <ADC_init>:
     512:	ea e7       	ldi	r30, 0x7A	; 122
     514:	f0 e0       	ldi	r31, 0x00	; 0
     516:	80 81       	ld	r24, Z
     518:	80 6e       	ori	r24, 0xE0	; 224
     51a:	80 83       	st	Z, r24
     51c:	08 95       	ret

0000051e <getMicBinary>:
     51e:	80 93 7c 00 	sts	0x007C, r24
     522:	20 91 78 00 	lds	r18, 0x0078
     526:	30 91 79 00 	lds	r19, 0x0079
     52a:	81 e0       	ldi	r24, 0x01	; 1
     52c:	40 91 4a 01 	lds	r20, 0x014A
     530:	50 91 4b 01 	lds	r21, 0x014B
     534:	24 17       	cp	r18, r20
     536:	35 07       	cpc	r19, r21
     538:	08 f4       	brcc	.+2      	; 0x53c <getMicBinary+0x1e>
     53a:	80 e0       	ldi	r24, 0x00	; 0
     53c:	08 95       	ret

0000053e <buildSymbols>:
     53e:	60 ed       	ldi	r22, 0xD0	; 208
     540:	72 e0       	ldi	r23, 0x02	; 2
     542:	81 e0       	ldi	r24, 0x01	; 1
     544:	d5 de       	rcall	.-598    	; 0x2f0 <LCDBuildChar>
     546:	67 ed       	ldi	r22, 0xD7	; 215
     548:	72 e0       	ldi	r23, 0x02	; 2
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	d1 ce       	rjmp	.-606    	; 0x2f0 <LCDBuildChar>
     54e:	08 95       	ret

00000550 <safeInc_note>:
     550:	28 2f       	mov	r18, r24
     552:	30 e0       	ldi	r19, 0x00	; 0
     554:	2f 5f       	subi	r18, 0xFF	; 255
     556:	3f 4f       	sbci	r19, 0xFF	; 255
     558:	21 32       	cpi	r18, 0x21	; 33
     55a:	31 05       	cpc	r19, r1
     55c:	0c f4       	brge	.+2      	; 0x560 <safeInc_note+0x10>
     55e:	8f 5f       	subi	r24, 0xFF	; 255
     560:	08 95       	ret

00000562 <safeDec_note>:
     562:	28 2f       	mov	r18, r24
     564:	30 e0       	ldi	r19, 0x00	; 0
     566:	21 50       	subi	r18, 0x01	; 1
     568:	31 09       	sbc	r19, r1
     56a:	12 16       	cp	r1, r18
     56c:	13 06       	cpc	r1, r19
     56e:	0c f4       	brge	.+2      	; 0x572 <safeDec_note+0x10>
     570:	81 50       	subi	r24, 0x01	; 1
     572:	08 95       	ret

00000574 <modifyIndexWith_joyInput>:
     574:	62 30       	cpi	r22, 0x02	; 2
     576:	61 f0       	breq	.+24     	; 0x590 <modifyIndexWith_joyInput+0x1c>
     578:	18 f4       	brcc	.+6      	; 0x580 <modifyIndexWith_joyInput+0xc>
     57a:	61 30       	cpi	r22, 0x01	; 1
     57c:	39 f0       	breq	.+14     	; 0x58c <modifyIndexWith_joyInput+0x18>
     57e:	08 95       	ret
     580:	63 30       	cpi	r22, 0x03	; 3
     582:	19 f0       	breq	.+6      	; 0x58a <modifyIndexWith_joyInput+0x16>
     584:	64 30       	cpi	r22, 0x04	; 4
     586:	29 f0       	breq	.+10     	; 0x592 <modifyIndexWith_joyInput+0x1e>
     588:	08 95       	ret
     58a:	e2 df       	rcall	.-60     	; 0x550 <safeInc_note>
     58c:	e1 cf       	rjmp	.-62     	; 0x550 <safeInc_note>
     58e:	08 95       	ret
     590:	e8 df       	rcall	.-48     	; 0x562 <safeDec_note>
     592:	e7 cf       	rjmp	.-50     	; 0x562 <safeDec_note>
     594:	08 95       	ret

00000596 <getNote>:
     596:	cf 93       	push	r28
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	c1 df       	rcall	.-126    	; 0x51e <getMicBinary>
     59c:	88 23       	and	r24, r24
     59e:	c9 f0       	breq	.+50     	; 0x5d2 <getNote+0x3c>
     5a0:	87 e8       	ldi	r24, 0x87	; 135
     5a2:	93 e1       	ldi	r25, 0x13	; 19
     5a4:	01 97       	sbiw	r24, 0x01	; 1
     5a6:	f1 f7       	brne	.-4      	; 0x5a4 <getNote+0xe>
     5a8:	00 c0       	rjmp	.+0      	; 0x5aa <getNote+0x14>
     5aa:	00 00       	nop
     5ac:	e9 b1       	in	r30, 0x09	; 9
     5ae:	e0 95       	com	r30
     5b0:	ef 70       	andi	r30, 0x0F	; 15
     5b2:	f0 e0       	ldi	r31, 0x00	; 0
     5b4:	ea 59       	subi	r30, 0x9A	; 154
     5b6:	fc 4f       	sbci	r31, 0xFC	; 252
     5b8:	c0 81       	ld	r28, Z
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	85 dd       	rcall	.-1270   	; 0xc8 <getJoystickDiscrete>
     5be:	68 2f       	mov	r22, r24
     5c0:	8c 2f       	mov	r24, r28
     5c2:	d8 df       	rcall	.-80     	; 0x574 <modifyIndexWith_joyInput>
     5c4:	e7 e8       	ldi	r30, 0x87	; 135
     5c6:	f3 e1       	ldi	r31, 0x13	; 19
     5c8:	31 97       	sbiw	r30, 0x01	; 1
     5ca:	f1 f7       	brne	.-4      	; 0x5c8 <getNote+0x32>
     5cc:	00 c0       	rjmp	.+0      	; 0x5ce <getNote+0x38>
     5ce:	00 00       	nop
     5d0:	01 c0       	rjmp	.+2      	; 0x5d4 <getNote+0x3e>
     5d2:	81 e2       	ldi	r24, 0x21	; 33
     5d4:	cf 91       	pop	r28
     5d6:	08 95       	ret

000005d8 <getVibrato>:
     5d8:	8f 92       	push	r8
     5da:	9f 92       	push	r9
     5dc:	af 92       	push	r10
     5de:	bf 92       	push	r11
     5e0:	cf 92       	push	r12
     5e2:	df 92       	push	r13
     5e4:	ef 92       	push	r14
     5e6:	ff 92       	push	r15
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
     5ec:	81 32       	cpi	r24, 0x21	; 33
     5ee:	09 f4       	brne	.+2      	; 0x5f2 <getVibrato+0x1a>
     5f0:	68 c0       	rjmp	.+208    	; 0x6c2 <getVibrato+0xea>
     5f2:	93 e0       	ldi	r25, 0x03	; 3
     5f4:	90 93 7c 00 	sts	0x007C, r25
     5f8:	60 91 78 00 	lds	r22, 0x0078
     5fc:	70 91 79 00 	lds	r23, 0x0079
     600:	72 50       	subi	r23, 0x02	; 2
     602:	e7 e8       	ldi	r30, 0x87	; 135
     604:	f3 e1       	ldi	r31, 0x13	; 19
     606:	31 97       	sbiw	r30, 0x01	; 1
     608:	f1 f7       	brne	.-4      	; 0x606 <getVibrato+0x2e>
     60a:	00 c0       	rjmp	.+0      	; 0x60c <getVibrato+0x34>
     60c:	00 00       	nop
     60e:	c8 2f       	mov	r28, r24
     610:	d0 e0       	ldi	r29, 0x00	; 0
     612:	fe 01       	movw	r30, r28
     614:	ee 0f       	add	r30, r30
     616:	ff 1f       	adc	r31, r31
     618:	ee 0f       	add	r30, r30
     61a:	ff 1f       	adc	r31, r31
     61c:	e2 52       	subi	r30, 0x22	; 34
     61e:	fd 4f       	sbci	r31, 0xFD	; 253
     620:	c0 80       	ld	r12, Z
     622:	d1 80       	ldd	r13, Z+1	; 0x01
     624:	e2 80       	ldd	r14, Z+2	; 0x02
     626:	f3 80       	ldd	r15, Z+3	; 0x03
     628:	16 16       	cp	r1, r22
     62a:	17 06       	cpc	r1, r23
     62c:	24 f5       	brge	.+72     	; 0x676 <getVibrato+0x9e>
     62e:	88 27       	eor	r24, r24
     630:	77 fd       	sbrc	r23, 7
     632:	80 95       	com	r24
     634:	98 2f       	mov	r25, r24
     636:	88 d2       	rcall	.+1296   	; 0xb48 <__floatsisf>
     638:	20 e0       	ldi	r18, 0x00	; 0
     63a:	30 e0       	ldi	r19, 0x00	; 0
     63c:	40 e0       	ldi	r20, 0x00	; 0
     63e:	5b e3       	ldi	r21, 0x3B	; 59
     640:	37 d3       	rcall	.+1646   	; 0xcb0 <__mulsf3>
     642:	4b 01       	movw	r8, r22
     644:	5c 01       	movw	r10, r24
     646:	cc 0f       	add	r28, r28
     648:	dd 1f       	adc	r29, r29
     64a:	cc 0f       	add	r28, r28
     64c:	dd 1f       	adc	r29, r29
     64e:	ce 51       	subi	r28, 0x1E	; 30
     650:	dd 4f       	sbci	r29, 0xFD	; 253
     652:	a7 01       	movw	r20, r14
     654:	96 01       	movw	r18, r12
     656:	68 81       	ld	r22, Y
     658:	79 81       	ldd	r23, Y+1	; 0x01
     65a:	8a 81       	ldd	r24, Y+2	; 0x02
     65c:	9b 81       	ldd	r25, Y+3	; 0x03
     65e:	70 d1       	rcall	.+736    	; 0x940 <__subsf3>
     660:	9b 01       	movw	r18, r22
     662:	ac 01       	movw	r20, r24
     664:	c5 01       	movw	r24, r10
     666:	b4 01       	movw	r22, r8
     668:	23 d3       	rcall	.+1606   	; 0xcb0 <__mulsf3>
     66a:	20 e0       	ldi	r18, 0x00	; 0
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	40 e8       	ldi	r20, 0x80	; 128
     670:	5e e3       	ldi	r21, 0x3E	; 62
     672:	1e d3       	rcall	.+1596   	; 0xcb0 <__mulsf3>
     674:	2d c0       	rjmp	.+90     	; 0x6d0 <getVibrato+0xf8>
     676:	77 23       	and	r23, r23
     678:	44 f5       	brge	.+80     	; 0x6ca <getVibrato+0xf2>
     67a:	88 27       	eor	r24, r24
     67c:	77 fd       	sbrc	r23, 7
     67e:	80 95       	com	r24
     680:	98 2f       	mov	r25, r24
     682:	62 d2       	rcall	.+1220   	; 0xb48 <__floatsisf>
     684:	20 e0       	ldi	r18, 0x00	; 0
     686:	30 e0       	ldi	r19, 0x00	; 0
     688:	40 e0       	ldi	r20, 0x00	; 0
     68a:	5b e3       	ldi	r21, 0x3B	; 59
     68c:	11 d3       	rcall	.+1570   	; 0xcb0 <__mulsf3>
     68e:	4b 01       	movw	r8, r22
     690:	5c 01       	movw	r10, r24
     692:	cc 0f       	add	r28, r28
     694:	dd 1f       	adc	r29, r29
     696:	cc 0f       	add	r28, r28
     698:	dd 1f       	adc	r29, r29
     69a:	c6 52       	subi	r28, 0x26	; 38
     69c:	dd 4f       	sbci	r29, 0xFD	; 253
     69e:	28 81       	ld	r18, Y
     6a0:	39 81       	ldd	r19, Y+1	; 0x01
     6a2:	4a 81       	ldd	r20, Y+2	; 0x02
     6a4:	5b 81       	ldd	r21, Y+3	; 0x03
     6a6:	c7 01       	movw	r24, r14
     6a8:	b6 01       	movw	r22, r12
     6aa:	4a d1       	rcall	.+660    	; 0x940 <__subsf3>
     6ac:	9b 01       	movw	r18, r22
     6ae:	ac 01       	movw	r20, r24
     6b0:	c5 01       	movw	r24, r10
     6b2:	b4 01       	movw	r22, r8
     6b4:	fd d2       	rcall	.+1530   	; 0xcb0 <__mulsf3>
     6b6:	20 e0       	ldi	r18, 0x00	; 0
     6b8:	30 e0       	ldi	r19, 0x00	; 0
     6ba:	40 e8       	ldi	r20, 0x80	; 128
     6bc:	5e e3       	ldi	r21, 0x3E	; 62
     6be:	f8 d2       	rcall	.+1520   	; 0xcb0 <__mulsf3>
     6c0:	07 c0       	rjmp	.+14     	; 0x6d0 <getVibrato+0xf8>
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	cb 01       	movw	r24, r22
     6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <getVibrato+0xf8>
     6ca:	60 e0       	ldi	r22, 0x00	; 0
     6cc:	70 e0       	ldi	r23, 0x00	; 0
     6ce:	cb 01       	movw	r24, r22
     6d0:	df 91       	pop	r29
     6d2:	cf 91       	pop	r28
     6d4:	ff 90       	pop	r15
     6d6:	ef 90       	pop	r14
     6d8:	df 90       	pop	r13
     6da:	cf 90       	pop	r12
     6dc:	bf 90       	pop	r11
     6de:	af 90       	pop	r10
     6e0:	9f 90       	pop	r9
     6e2:	8f 90       	pop	r8
     6e4:	08 95       	ret

000006e6 <produceSound>:
     6e6:	e8 2f       	mov	r30, r24
     6e8:	cb 01       	movw	r24, r22
     6ea:	ba 01       	movw	r22, r20
     6ec:	e1 32       	cpi	r30, 0x21	; 33
     6ee:	29 f4       	brne	.+10     	; 0x6fa <produceSound+0x14>
     6f0:	60 e0       	ldi	r22, 0x00	; 0
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	cb 01       	movw	r24, r22
     6f6:	99 ce       	rjmp	.-718    	; 0x42a <set_PWM>
     6f8:	08 95       	ret
     6fa:	f0 e0       	ldi	r31, 0x00	; 0
     6fc:	ee 0f       	add	r30, r30
     6fe:	ff 1f       	adc	r31, r31
     700:	ee 0f       	add	r30, r30
     702:	ff 1f       	adc	r31, r31
     704:	e2 52       	subi	r30, 0x22	; 34
     706:	fd 4f       	sbci	r31, 0xFD	; 253
     708:	20 81       	ld	r18, Z
     70a:	31 81       	ldd	r19, Z+1	; 0x01
     70c:	42 81       	ldd	r20, Z+2	; 0x02
     70e:	53 81       	ldd	r21, Z+3	; 0x03
     710:	18 d1       	rcall	.+560    	; 0x942 <__addsf3>
     712:	8b ce       	rjmp	.-746    	; 0x42a <set_PWM>
     714:	08 95       	ret

00000716 <printNote>:
     716:	1f 93       	push	r17
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	16 2f       	mov	r17, r22
     71e:	e8 2f       	mov	r30, r24
     720:	f0 e0       	ldi	r31, 0x00	; 0
     722:	ee 0f       	add	r30, r30
     724:	ff 1f       	adc	r31, r31
     726:	ea 5f       	subi	r30, 0xFA	; 250
     728:	fe 4f       	sbci	r31, 0xFE	; 254
     72a:	c0 81       	ld	r28, Z
     72c:	d1 81       	ldd	r29, Z+1	; 0x01
     72e:	fe 01       	movw	r30, r28
     730:	01 90       	ld	r0, Z+
     732:	00 20       	and	r0, r0
     734:	e9 f7       	brne	.-6      	; 0x730 <printNote+0x1a>
     736:	9f 01       	movw	r18, r30
     738:	2a 50       	subi	r18, 0x0A	; 10
     73a:	31 09       	sbc	r19, r1
     73c:	2c 17       	cp	r18, r28
     73e:	3d 07       	cpc	r19, r29
     740:	09 f5       	brne	.+66     	; 0x784 <printNote+0x6e>
     742:	36 dd       	rcall	.-1428   	; 0x1b0 <LCD_ClearScreen>
     744:	41 e0       	ldi	r20, 0x01	; 1
     746:	50 e0       	ldi	r21, 0x00	; 0
     748:	be 01       	movw	r22, r28
     74a:	81 2f       	mov	r24, r17
     74c:	ec dd       	rcall	.-1064   	; 0x326 <LCD_WriteSubstring>
     74e:	81 e0       	ldi	r24, 0x01	; 1
     750:	81 0f       	add	r24, r17
     752:	49 dd       	rcall	.-1390   	; 0x1e6 <LCD_Cursor>
     754:	81 e0       	ldi	r24, 0x01	; 1
     756:	3e dd       	rcall	.-1412   	; 0x1d4 <LCD_WriteData>
     758:	be 01       	movw	r22, r28
     75a:	6e 5f       	subi	r22, 0xFE	; 254
     75c:	7f 4f       	sbci	r23, 0xFF	; 255
     75e:	45 e0       	ldi	r20, 0x05	; 5
     760:	50 e0       	ldi	r21, 0x00	; 0
     762:	82 e0       	ldi	r24, 0x02	; 2
     764:	81 0f       	add	r24, r17
     766:	df dd       	rcall	.-1090   	; 0x326 <LCD_WriteSubstring>
     768:	87 e0       	ldi	r24, 0x07	; 7
     76a:	81 0f       	add	r24, r17
     76c:	3c dd       	rcall	.-1416   	; 0x1e6 <LCD_Cursor>
     76e:	80 e0       	ldi	r24, 0x00	; 0
     770:	31 dd       	rcall	.-1438   	; 0x1d4 <LCD_WriteData>
     772:	be 01       	movw	r22, r28
     774:	68 5f       	subi	r22, 0xF8	; 248
     776:	7f 4f       	sbci	r23, 0xFF	; 255
     778:	41 e0       	ldi	r20, 0x01	; 1
     77a:	50 e0       	ldi	r21, 0x00	; 0
     77c:	88 e0       	ldi	r24, 0x08	; 8
     77e:	81 0f       	add	r24, r17
     780:	d2 dd       	rcall	.-1116   	; 0x326 <LCD_WriteSubstring>
     782:	03 c0       	rjmp	.+6      	; 0x78a <printNote+0x74>
     784:	be 01       	movw	r22, r28
     786:	81 2f       	mov	r24, r17
     788:	36 dd       	rcall	.-1428   	; 0x1f6 <LCD_DisplayString>
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	1f 91       	pop	r17
     790:	08 95       	ret

00000792 <initialize>:
     792:	11 b8       	out	0x01, r1	; 1
     794:	8f ef       	ldi	r24, 0xFF	; 255
     796:	82 b9       	out	0x02, r24	; 2
     798:	87 b9       	out	0x07, r24	; 7
     79a:	18 b8       	out	0x08, r1	; 8
     79c:	90 ec       	ldi	r25, 0xC0	; 192
     79e:	9a b9       	out	0x0a, r25	; 10
     7a0:	9f e3       	ldi	r25, 0x3F	; 63
     7a2:	9b b9       	out	0x0b, r25	; 11
     7a4:	84 b9       	out	0x04, r24	; 4
     7a6:	15 b8       	out	0x05, r1	; 5
     7a8:	b4 de       	rcall	.-664    	; 0x512 <ADC_init>
     7aa:	05 dd       	rcall	.-1526   	; 0x1b6 <LCD_init>
     7ac:	a7 de       	rcall	.-690    	; 0x4fc <PWM_on>
     7ae:	84 e6       	ldi	r24, 0x64	; 100
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	a0 e0       	ldi	r26, 0x00	; 0
     7b4:	b0 e0       	ldi	r27, 0x00	; 0
     7b6:	80 93 4c 01 	sts	0x014C, r24
     7ba:	90 93 4d 01 	sts	0x014D, r25
     7be:	a0 93 4e 01 	sts	0x014E, r26
     7c2:	b0 93 4f 01 	sts	0x014F, r27
     7c6:	80 93 7a 03 	sts	0x037A, r24
     7ca:	90 93 7b 03 	sts	0x037B, r25
     7ce:	a0 93 7c 03 	sts	0x037C, r26
     7d2:	b0 93 7d 03 	sts	0x037D, r27
     7d6:	c9 dd       	rcall	.-1134   	; 0x36a <TimerOn>
     7d8:	b2 ce       	rjmp	.-668    	; 0x53e <buildSymbols>
     7da:	08 95       	ret

000007dc <main>:
        break;
    }
}

int main(void) {
     7dc:	af 92       	push	r10
     7de:	bf 92       	push	r11
     7e0:	cf 92       	push	r12
     7e2:	df 92       	push	r13
     7e4:	ef 92       	push	r14
     7e6:	ff 92       	push	r15
     7e8:	0f 93       	push	r16
     7ea:	1f 93       	push	r17
     7ec:	cf 93       	push	r28
     7ee:	df 93       	push	r29
     7f0:	cd b7       	in	r28, 0x3d	; 61
     7f2:	de b7       	in	r29, 0x3e	; 62
     7f4:	c0 54       	subi	r28, 0x40	; 64
     7f6:	d1 09       	sbc	r29, r1
     7f8:	0f b6       	in	r0, 0x3f	; 63
     7fa:	f8 94       	cli
     7fc:	de bf       	out	0x3e, r29	; 62
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	cd bf       	out	0x3d, r28	; 61
    
    initialize();
     802:	c7 df       	rcall	.-114    	; 0x792 <initialize>
    bool doneRecording = false;
    
    unsigned char measures = 8;
    unsigned char song_inRAM[8 * measures]; //smallest increment is 8th note
    
    LCD_displayTwoLines("Left: Record", "Right: Playback");
     804:	68 ec       	ldi	r22, 0xC8	; 200
     806:	71 e0       	ldi	r23, 0x01	; 1
     808:	88 ed       	ldi	r24, 0xD8	; 216
     80a:	91 e0       	ldi	r25, 0x01	; 1
     80c:	0e dd       	rcall	.-1508   	; 0x22a <LCD_displayTwoLines>
    while (MyGetBit(PINA, 4) && MyGetBit(PINA, 2)) {}
     80e:	04 9b       	sbis	0x00, 4	; 0
     810:	02 c0       	rjmp	.+4      	; 0x816 <main+0x3a>
     812:	02 99       	sbic	0x00, 2	; 0
     814:	fc cf       	rjmp	.-8      	; 0x80e <main+0x32>
        
    //left - record
    if (!MyGetBit(PINA, 4)) {
     816:	04 99       	sbic	0x00, 4	; 0
     818:	4c c0       	rjmp	.+152    	; 0x8b2 <main+0xd6>
        
        LCD_DisplayString(1, "Recording!");
     81a:	65 ee       	ldi	r22, 0xE5	; 229
     81c:	71 e0       	ldi	r23, 0x01	; 1
     81e:	81 e0       	ldi	r24, 0x01	; 1
     820:	ea dc       	rcall	.-1580   	; 0x1f6 <LCD_DisplayString>
        while (!MyGetBit(PINA, 4)) {}
     822:	04 9b       	sbis	0x00, 4	; 0
     824:	fe cf       	rjmp	.-4      	; 0x822 <main+0x46>
            
        while(MyGetBit(PINA, 4) && !doneRecording) {
     826:	04 9b       	sbis	0x00, 4	; 0
     828:	37 c0       	rjmp	.+110    	; 0x898 <main+0xbc>
     82a:	10 e0       	ldi	r17, 0x00	; 0
            unsigned char noteIndex = getNote();
            _delay_ms(20);  //need to do this between polls
            double vibratoFreq = getVibrato(noteIndex);
                
            //Record note
            if (i % 3 == 0) {   //Every 300ms
     82c:	0f 2e       	mov	r0, r31
     82e:	fb ea       	ldi	r31, 0xAB	; 171
     830:	af 2e       	mov	r10, r31
     832:	f0 2d       	mov	r31, r0
        while (!MyGetBit(PINA, 4)) {}
            
        while(MyGetBit(PINA, 4) && !doneRecording) {
                
            //Calculate note
            unsigned char noteIndex = getNote();
     834:	b0 de       	rcall	.-672    	; 0x596 <getNote>
     836:	08 2f       	mov	r16, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     838:	87 e8       	ldi	r24, 0x87	; 135
     83a:	93 e1       	ldi	r25, 0x13	; 19
     83c:	01 97       	sbiw	r24, 0x01	; 1
     83e:	f1 f7       	brne	.-4      	; 0x83c <main+0x60>
     840:	00 c0       	rjmp	.+0      	; 0x842 <main+0x66>
     842:	00 00       	nop
            _delay_ms(20);  //need to do this between polls
            double vibratoFreq = getVibrato(noteIndex);
     844:	80 2f       	mov	r24, r16
     846:	c8 de       	rcall	.-624    	; 0x5d8 <getVibrato>
     848:	6b 01       	movw	r12, r22
     84a:	7c 01       	movw	r14, r24
                
            //Record note
            if (i % 3 == 0) {   //Every 300ms
     84c:	1a 9d       	mul	r17, r10
     84e:	81 2d       	mov	r24, r1
     850:	11 24       	eor	r1, r1
     852:	86 95       	lsr	r24
     854:	98 2f       	mov	r25, r24
     856:	99 0f       	add	r25, r25
     858:	89 0f       	add	r24, r25
     85a:	18 13       	cpse	r17, r24
     85c:	07 c0       	rjmp	.+14     	; 0x86c <main+0x90>
                    
                song_inRAM[i] = noteIndex;
     85e:	e1 e0       	ldi	r30, 0x01	; 1
     860:	f0 e0       	ldi	r31, 0x00	; 0
     862:	ec 0f       	add	r30, r28
     864:	fd 1f       	adc	r31, r29
     866:	e1 0f       	add	r30, r17
     868:	f1 1d       	adc	r31, r1
     86a:	00 83       	st	Z, r16
            }
            if (i >= 64)
            doneRecording = true;
            i++;
     86c:	bb 24       	eor	r11, r11
     86e:	b3 94       	inc	r11
     870:	b1 0e       	add	r11, r17
                
            //Display current sound on LCD
            printNote(noteIndex, 1);
     872:	61 e0       	ldi	r22, 0x01	; 1
     874:	80 2f       	mov	r24, r16
     876:	4f df       	rcall	.-354    	; 0x716 <printNote>
                
            //Make sound
            produceSound(noteIndex, vibratoFreq);
     878:	b7 01       	movw	r22, r14
     87a:	a6 01       	movw	r20, r12
     87c:	80 2f       	mov	r24, r16
     87e:	33 df       	rcall	.-410    	; 0x6e6 <produceSound>
            //produceSound(noteIndex, 0.0);
                
            //Do a timer delay
            while (!TimerFlag) {}
     880:	80 91 7e 03 	lds	r24, 0x037E
     884:	88 23       	and	r24, r24
     886:	e1 f3       	breq	.-8      	; 0x880 <main+0xa4>
            TimerFlag = 0;
     888:	10 92 7e 03 	sts	0x037E, r1
    if (!MyGetBit(PINA, 4)) {
        
        LCD_DisplayString(1, "Recording!");
        while (!MyGetBit(PINA, 4)) {}
            
        while(MyGetBit(PINA, 4) && !doneRecording) {
     88c:	04 9b       	sbis	0x00, 4	; 0
     88e:	04 c0       	rjmp	.+8      	; 0x898 <main+0xbc>
     890:	10 34       	cpi	r17, 0x40	; 64
     892:	10 f4       	brcc	.+4      	; 0x898 <main+0xbc>
                    
                song_inRAM[i] = noteIndex;
            }
            if (i >= 64)
            doneRecording = true;
            i++;
     894:	1b 2d       	mov	r17, r11
     896:	ce cf       	rjmp	.-100    	; 0x834 <main+0x58>
            //Do a timer delay
            while (!TimerFlag) {}
            TimerFlag = 0;
        }
            
        produceSound(SHH_INDEX, 0);
     898:	40 e0       	ldi	r20, 0x00	; 0
     89a:	50 e0       	ldi	r21, 0x00	; 0
     89c:	ba 01       	movw	r22, r20
     89e:	81 e2       	ldi	r24, 0x21	; 33
     8a0:	22 df       	rcall	.-444    	; 0x6e6 <produceSound>
            
        //Write to EEPROM
        eeprom_update_block( (const void*) song_inRAM, (void*) song_inEEPROM, 8 * measures);
     8a2:	40 e4       	ldi	r20, 0x40	; 64
     8a4:	50 e0       	ldi	r21, 0x00	; 0
     8a6:	60 e0       	ldi	r22, 0x00	; 0
     8a8:	70 e0       	ldi	r23, 0x00	; 0
     8aa:	ce 01       	movw	r24, r28
     8ac:	01 96       	adiw	r24, 0x01	; 1
     8ae:	b3 d3       	rcall	.+1894   	; 0x1016 <__eeupd_block_m1284>
     8b0:	2e c0       	rjmp	.+92     	; 0x90e <main+0x132>
        //LCD_DisplayString(1, "Wrote to EEPROM");
    }
    
    //right - playback
    else if (!MyGetBit(PINA, 2)) {
     8b2:	02 99       	sbic	0x00, 2	; 0
     8b4:	2c c0       	rjmp	.+88     	; 0x90e <main+0x132>
        
        while (!MyGetBit(PINA, 2));
     8b6:	02 9b       	sbis	0x00, 2	; 0
     8b8:	fe cf       	rjmp	.-4      	; 0x8b6 <main+0xda>
        //by now, they've lifted finger off 2
        
        eeprom_read_block((void*) song_inRAM, (const void*) song_inEEPROM, 8 * measures);
     8ba:	40 e4       	ldi	r20, 0x40	; 64
     8bc:	50 e0       	ldi	r21, 0x00	; 0
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	70 e0       	ldi	r23, 0x00	; 0
     8c2:	ce 01       	movw	r24, r28
     8c4:	01 96       	adiw	r24, 0x01	; 1
     8c6:	97 d3       	rcall	.+1838   	; 0xff6 <__eerd_block_m1284>
            
        //Just playback the song
        for (unsigned char* note_ptr = song_inRAM;
     8c8:	fe 01       	movw	r30, r28
     8ca:	31 96       	adiw	r30, 0x01	; 1
     8cc:	7f 01       	movw	r14, r30
     8ce:	6e 01       	movw	r12, r28
     8d0:	f2 e4       	ldi	r31, 0x42	; 66
     8d2:	cf 0e       	add	r12, r31
     8d4:	d1 1c       	adc	r13, r1
        note_ptr <= song_inRAM + (8 * measures);
        note_ptr++) {
                
            produceSound(*note_ptr, 0);
     8d6:	40 e0       	ldi	r20, 0x00	; 0
     8d8:	50 e0       	ldi	r21, 0x00	; 0
     8da:	ba 01       	movw	r22, r20
     8dc:	f7 01       	movw	r30, r14
     8de:	80 81       	ld	r24, Z
     8e0:	02 df       	rcall	.-508    	; 0x6e6 <produceSound>
                
            while (!TimerFlag) {
     8e2:	80 91 7e 03 	lds	r24, 0x037E
     8e6:	81 11       	cpse	r24, r1
     8e8:	0a c0       	rjmp	.+20     	; 0x8fe <main+0x122>
                produceSound(*note_ptr, 0);
     8ea:	40 e0       	ldi	r20, 0x00	; 0
     8ec:	50 e0       	ldi	r21, 0x00	; 0
     8ee:	ba 01       	movw	r22, r20
     8f0:	f7 01       	movw	r30, r14
     8f2:	80 81       	ld	r24, Z
     8f4:	f8 de       	rcall	.-528    	; 0x6e6 <produceSound>
        note_ptr <= song_inRAM + (8 * measures);
        note_ptr++) {
                
            produceSound(*note_ptr, 0);
                
            while (!TimerFlag) {
     8f6:	80 91 7e 03 	lds	r24, 0x037E
     8fa:	88 23       	and	r24, r24
     8fc:	b1 f3       	breq	.-20     	; 0x8ea <main+0x10e>
                produceSound(*note_ptr, 0);
            }
            TimerFlag = false;
     8fe:	10 92 7e 03 	sts	0x037E, r1
        eeprom_read_block((void*) song_inRAM, (const void*) song_inEEPROM, 8 * measures);
            
        //Just playback the song
        for (unsigned char* note_ptr = song_inRAM;
        note_ptr <= song_inRAM + (8 * measures);
        note_ptr++) {
     902:	ff ef       	ldi	r31, 0xFF	; 255
     904:	ef 1a       	sub	r14, r31
     906:	ff 0a       	sbc	r15, r31
        //by now, they've lifted finger off 2
        
        eeprom_read_block((void*) song_inRAM, (const void*) song_inEEPROM, 8 * measures);
            
        //Just playback the song
        for (unsigned char* note_ptr = song_inRAM;
     908:	ec 14       	cp	r14, r12
     90a:	fd 04       	cpc	r15, r13
     90c:	21 f7       	brne	.-56     	; 0x8d6 <main+0xfa>
            TimerFlag = false;
        }
    }
    
    //LCD_DisplayString(1, "Done! RESET for another go :)");
    LCD_displayTwoLines("Done! RESET for", "another go :)");
     90e:	60 ef       	ldi	r22, 0xF0	; 240
     910:	71 e0       	ldi	r23, 0x01	; 1
     912:	8e ef       	ldi	r24, 0xFE	; 254
     914:	91 e0       	ldi	r25, 0x01	; 1
     916:	89 dc       	rcall	.-1774   	; 0x22a <LCD_displayTwoLines>

    
    
    
    return 0;
}
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	c0 5c       	subi	r28, 0xC0	; 192
     91e:	df 4f       	sbci	r29, 0xFF	; 255
     920:	0f b6       	in	r0, 0x3f	; 63
     922:	f8 94       	cli
     924:	de bf       	out	0x3e, r29	; 62
     926:	0f be       	out	0x3f, r0	; 63
     928:	cd bf       	out	0x3d, r28	; 61
     92a:	df 91       	pop	r29
     92c:	cf 91       	pop	r28
     92e:	1f 91       	pop	r17
     930:	0f 91       	pop	r16
     932:	ff 90       	pop	r15
     934:	ef 90       	pop	r14
     936:	df 90       	pop	r13
     938:	cf 90       	pop	r12
     93a:	bf 90       	pop	r11
     93c:	af 90       	pop	r10
     93e:	08 95       	ret

00000940 <__subsf3>:
     940:	50 58       	subi	r21, 0x80	; 128

00000942 <__addsf3>:
     942:	bb 27       	eor	r27, r27
     944:	aa 27       	eor	r26, r26
     946:	0e d0       	rcall	.+28     	; 0x964 <__addsf3x>
     948:	75 c1       	rjmp	.+746    	; 0xc34 <__fp_round>
     94a:	66 d1       	rcall	.+716    	; 0xc18 <__fp_pscA>
     94c:	30 f0       	brcs	.+12     	; 0x95a <__addsf3+0x18>
     94e:	6b d1       	rcall	.+726    	; 0xc26 <__fp_pscB>
     950:	20 f0       	brcs	.+8      	; 0x95a <__addsf3+0x18>
     952:	31 f4       	brne	.+12     	; 0x960 <__addsf3+0x1e>
     954:	9f 3f       	cpi	r25, 0xFF	; 255
     956:	11 f4       	brne	.+4      	; 0x95c <__addsf3+0x1a>
     958:	1e f4       	brtc	.+6      	; 0x960 <__addsf3+0x1e>
     95a:	5b c1       	rjmp	.+694    	; 0xc12 <__fp_nan>
     95c:	0e f4       	brtc	.+2      	; 0x960 <__addsf3+0x1e>
     95e:	e0 95       	com	r30
     960:	e7 fb       	bst	r30, 7
     962:	51 c1       	rjmp	.+674    	; 0xc06 <__fp_inf>

00000964 <__addsf3x>:
     964:	e9 2f       	mov	r30, r25
     966:	77 d1       	rcall	.+750    	; 0xc56 <__fp_split3>
     968:	80 f3       	brcs	.-32     	; 0x94a <__addsf3+0x8>
     96a:	ba 17       	cp	r27, r26
     96c:	62 07       	cpc	r22, r18
     96e:	73 07       	cpc	r23, r19
     970:	84 07       	cpc	r24, r20
     972:	95 07       	cpc	r25, r21
     974:	18 f0       	brcs	.+6      	; 0x97c <__addsf3x+0x18>
     976:	71 f4       	brne	.+28     	; 0x994 <__addsf3x+0x30>
     978:	9e f5       	brtc	.+102    	; 0x9e0 <__addsf3x+0x7c>
     97a:	8f c1       	rjmp	.+798    	; 0xc9a <__fp_zero>
     97c:	0e f4       	brtc	.+2      	; 0x980 <__addsf3x+0x1c>
     97e:	e0 95       	com	r30
     980:	0b 2e       	mov	r0, r27
     982:	ba 2f       	mov	r27, r26
     984:	a0 2d       	mov	r26, r0
     986:	0b 01       	movw	r0, r22
     988:	b9 01       	movw	r22, r18
     98a:	90 01       	movw	r18, r0
     98c:	0c 01       	movw	r0, r24
     98e:	ca 01       	movw	r24, r20
     990:	a0 01       	movw	r20, r0
     992:	11 24       	eor	r1, r1
     994:	ff 27       	eor	r31, r31
     996:	59 1b       	sub	r21, r25
     998:	99 f0       	breq	.+38     	; 0x9c0 <__addsf3x+0x5c>
     99a:	59 3f       	cpi	r21, 0xF9	; 249
     99c:	50 f4       	brcc	.+20     	; 0x9b2 <__addsf3x+0x4e>
     99e:	50 3e       	cpi	r21, 0xE0	; 224
     9a0:	68 f1       	brcs	.+90     	; 0x9fc <__addsf3x+0x98>
     9a2:	1a 16       	cp	r1, r26
     9a4:	f0 40       	sbci	r31, 0x00	; 0
     9a6:	a2 2f       	mov	r26, r18
     9a8:	23 2f       	mov	r18, r19
     9aa:	34 2f       	mov	r19, r20
     9ac:	44 27       	eor	r20, r20
     9ae:	58 5f       	subi	r21, 0xF8	; 248
     9b0:	f3 cf       	rjmp	.-26     	; 0x998 <__addsf3x+0x34>
     9b2:	46 95       	lsr	r20
     9b4:	37 95       	ror	r19
     9b6:	27 95       	ror	r18
     9b8:	a7 95       	ror	r26
     9ba:	f0 40       	sbci	r31, 0x00	; 0
     9bc:	53 95       	inc	r21
     9be:	c9 f7       	brne	.-14     	; 0x9b2 <__addsf3x+0x4e>
     9c0:	7e f4       	brtc	.+30     	; 0x9e0 <__addsf3x+0x7c>
     9c2:	1f 16       	cp	r1, r31
     9c4:	ba 0b       	sbc	r27, r26
     9c6:	62 0b       	sbc	r22, r18
     9c8:	73 0b       	sbc	r23, r19
     9ca:	84 0b       	sbc	r24, r20
     9cc:	ba f0       	brmi	.+46     	; 0x9fc <__addsf3x+0x98>
     9ce:	91 50       	subi	r25, 0x01	; 1
     9d0:	a1 f0       	breq	.+40     	; 0x9fa <__addsf3x+0x96>
     9d2:	ff 0f       	add	r31, r31
     9d4:	bb 1f       	adc	r27, r27
     9d6:	66 1f       	adc	r22, r22
     9d8:	77 1f       	adc	r23, r23
     9da:	88 1f       	adc	r24, r24
     9dc:	c2 f7       	brpl	.-16     	; 0x9ce <__addsf3x+0x6a>
     9de:	0e c0       	rjmp	.+28     	; 0x9fc <__addsf3x+0x98>
     9e0:	ba 0f       	add	r27, r26
     9e2:	62 1f       	adc	r22, r18
     9e4:	73 1f       	adc	r23, r19
     9e6:	84 1f       	adc	r24, r20
     9e8:	48 f4       	brcc	.+18     	; 0x9fc <__addsf3x+0x98>
     9ea:	87 95       	ror	r24
     9ec:	77 95       	ror	r23
     9ee:	67 95       	ror	r22
     9f0:	b7 95       	ror	r27
     9f2:	f7 95       	ror	r31
     9f4:	9e 3f       	cpi	r25, 0xFE	; 254
     9f6:	08 f0       	brcs	.+2      	; 0x9fa <__addsf3x+0x96>
     9f8:	b3 cf       	rjmp	.-154    	; 0x960 <__addsf3+0x1e>
     9fa:	93 95       	inc	r25
     9fc:	88 0f       	add	r24, r24
     9fe:	08 f0       	brcs	.+2      	; 0xa02 <__addsf3x+0x9e>
     a00:	99 27       	eor	r25, r25
     a02:	ee 0f       	add	r30, r30
     a04:	97 95       	ror	r25
     a06:	87 95       	ror	r24
     a08:	08 95       	ret

00000a0a <__cmpsf2>:
     a0a:	d9 d0       	rcall	.+434    	; 0xbbe <__fp_cmp>
     a0c:	08 f4       	brcc	.+2      	; 0xa10 <__cmpsf2+0x6>
     a0e:	81 e0       	ldi	r24, 0x01	; 1
     a10:	08 95       	ret

00000a12 <__divsf3>:
     a12:	0c d0       	rcall	.+24     	; 0xa2c <__divsf3x>
     a14:	0f c1       	rjmp	.+542    	; 0xc34 <__fp_round>
     a16:	07 d1       	rcall	.+526    	; 0xc26 <__fp_pscB>
     a18:	40 f0       	brcs	.+16     	; 0xa2a <__divsf3+0x18>
     a1a:	fe d0       	rcall	.+508    	; 0xc18 <__fp_pscA>
     a1c:	30 f0       	brcs	.+12     	; 0xa2a <__divsf3+0x18>
     a1e:	21 f4       	brne	.+8      	; 0xa28 <__divsf3+0x16>
     a20:	5f 3f       	cpi	r21, 0xFF	; 255
     a22:	19 f0       	breq	.+6      	; 0xa2a <__divsf3+0x18>
     a24:	f0 c0       	rjmp	.+480    	; 0xc06 <__fp_inf>
     a26:	51 11       	cpse	r21, r1
     a28:	39 c1       	rjmp	.+626    	; 0xc9c <__fp_szero>
     a2a:	f3 c0       	rjmp	.+486    	; 0xc12 <__fp_nan>

00000a2c <__divsf3x>:
     a2c:	14 d1       	rcall	.+552    	; 0xc56 <__fp_split3>
     a2e:	98 f3       	brcs	.-26     	; 0xa16 <__divsf3+0x4>

00000a30 <__divsf3_pse>:
     a30:	99 23       	and	r25, r25
     a32:	c9 f3       	breq	.-14     	; 0xa26 <__divsf3+0x14>
     a34:	55 23       	and	r21, r21
     a36:	b1 f3       	breq	.-20     	; 0xa24 <__divsf3+0x12>
     a38:	95 1b       	sub	r25, r21
     a3a:	55 0b       	sbc	r21, r21
     a3c:	bb 27       	eor	r27, r27
     a3e:	aa 27       	eor	r26, r26
     a40:	62 17       	cp	r22, r18
     a42:	73 07       	cpc	r23, r19
     a44:	84 07       	cpc	r24, r20
     a46:	38 f0       	brcs	.+14     	; 0xa56 <__divsf3_pse+0x26>
     a48:	9f 5f       	subi	r25, 0xFF	; 255
     a4a:	5f 4f       	sbci	r21, 0xFF	; 255
     a4c:	22 0f       	add	r18, r18
     a4e:	33 1f       	adc	r19, r19
     a50:	44 1f       	adc	r20, r20
     a52:	aa 1f       	adc	r26, r26
     a54:	a9 f3       	breq	.-22     	; 0xa40 <__divsf3_pse+0x10>
     a56:	33 d0       	rcall	.+102    	; 0xabe <__divsf3_pse+0x8e>
     a58:	0e 2e       	mov	r0, r30
     a5a:	3a f0       	brmi	.+14     	; 0xa6a <__divsf3_pse+0x3a>
     a5c:	e0 e8       	ldi	r30, 0x80	; 128
     a5e:	30 d0       	rcall	.+96     	; 0xac0 <__divsf3_pse+0x90>
     a60:	91 50       	subi	r25, 0x01	; 1
     a62:	50 40       	sbci	r21, 0x00	; 0
     a64:	e6 95       	lsr	r30
     a66:	00 1c       	adc	r0, r0
     a68:	ca f7       	brpl	.-14     	; 0xa5c <__divsf3_pse+0x2c>
     a6a:	29 d0       	rcall	.+82     	; 0xabe <__divsf3_pse+0x8e>
     a6c:	fe 2f       	mov	r31, r30
     a6e:	27 d0       	rcall	.+78     	; 0xabe <__divsf3_pse+0x8e>
     a70:	66 0f       	add	r22, r22
     a72:	77 1f       	adc	r23, r23
     a74:	88 1f       	adc	r24, r24
     a76:	bb 1f       	adc	r27, r27
     a78:	26 17       	cp	r18, r22
     a7a:	37 07       	cpc	r19, r23
     a7c:	48 07       	cpc	r20, r24
     a7e:	ab 07       	cpc	r26, r27
     a80:	b0 e8       	ldi	r27, 0x80	; 128
     a82:	09 f0       	breq	.+2      	; 0xa86 <__divsf3_pse+0x56>
     a84:	bb 0b       	sbc	r27, r27
     a86:	80 2d       	mov	r24, r0
     a88:	bf 01       	movw	r22, r30
     a8a:	ff 27       	eor	r31, r31
     a8c:	93 58       	subi	r25, 0x83	; 131
     a8e:	5f 4f       	sbci	r21, 0xFF	; 255
     a90:	2a f0       	brmi	.+10     	; 0xa9c <__divsf3_pse+0x6c>
     a92:	9e 3f       	cpi	r25, 0xFE	; 254
     a94:	51 05       	cpc	r21, r1
     a96:	68 f0       	brcs	.+26     	; 0xab2 <__divsf3_pse+0x82>
     a98:	b6 c0       	rjmp	.+364    	; 0xc06 <__fp_inf>
     a9a:	00 c1       	rjmp	.+512    	; 0xc9c <__fp_szero>
     a9c:	5f 3f       	cpi	r21, 0xFF	; 255
     a9e:	ec f3       	brlt	.-6      	; 0xa9a <__divsf3_pse+0x6a>
     aa0:	98 3e       	cpi	r25, 0xE8	; 232
     aa2:	dc f3       	brlt	.-10     	; 0xa9a <__divsf3_pse+0x6a>
     aa4:	86 95       	lsr	r24
     aa6:	77 95       	ror	r23
     aa8:	67 95       	ror	r22
     aaa:	b7 95       	ror	r27
     aac:	f7 95       	ror	r31
     aae:	9f 5f       	subi	r25, 0xFF	; 255
     ab0:	c9 f7       	brne	.-14     	; 0xaa4 <__divsf3_pse+0x74>
     ab2:	88 0f       	add	r24, r24
     ab4:	91 1d       	adc	r25, r1
     ab6:	96 95       	lsr	r25
     ab8:	87 95       	ror	r24
     aba:	97 f9       	bld	r25, 7
     abc:	08 95       	ret
     abe:	e1 e0       	ldi	r30, 0x01	; 1
     ac0:	66 0f       	add	r22, r22
     ac2:	77 1f       	adc	r23, r23
     ac4:	88 1f       	adc	r24, r24
     ac6:	bb 1f       	adc	r27, r27
     ac8:	62 17       	cp	r22, r18
     aca:	73 07       	cpc	r23, r19
     acc:	84 07       	cpc	r24, r20
     ace:	ba 07       	cpc	r27, r26
     ad0:	20 f0       	brcs	.+8      	; 0xada <__divsf3_pse+0xaa>
     ad2:	62 1b       	sub	r22, r18
     ad4:	73 0b       	sbc	r23, r19
     ad6:	84 0b       	sbc	r24, r20
     ad8:	ba 0b       	sbc	r27, r26
     ada:	ee 1f       	adc	r30, r30
     adc:	88 f7       	brcc	.-30     	; 0xac0 <__divsf3_pse+0x90>
     ade:	e0 95       	com	r30
     ae0:	08 95       	ret

00000ae2 <__fixsfsi>:
     ae2:	04 d0       	rcall	.+8      	; 0xaec <__fixunssfsi>
     ae4:	68 94       	set
     ae6:	b1 11       	cpse	r27, r1
     ae8:	d9 c0       	rjmp	.+434    	; 0xc9c <__fp_szero>
     aea:	08 95       	ret

00000aec <__fixunssfsi>:
     aec:	bc d0       	rcall	.+376    	; 0xc66 <__fp_splitA>
     aee:	88 f0       	brcs	.+34     	; 0xb12 <__fixunssfsi+0x26>
     af0:	9f 57       	subi	r25, 0x7F	; 127
     af2:	90 f0       	brcs	.+36     	; 0xb18 <__fixunssfsi+0x2c>
     af4:	b9 2f       	mov	r27, r25
     af6:	99 27       	eor	r25, r25
     af8:	b7 51       	subi	r27, 0x17	; 23
     afa:	a0 f0       	brcs	.+40     	; 0xb24 <__fixunssfsi+0x38>
     afc:	d1 f0       	breq	.+52     	; 0xb32 <__fixunssfsi+0x46>
     afe:	66 0f       	add	r22, r22
     b00:	77 1f       	adc	r23, r23
     b02:	88 1f       	adc	r24, r24
     b04:	99 1f       	adc	r25, r25
     b06:	1a f0       	brmi	.+6      	; 0xb0e <__fixunssfsi+0x22>
     b08:	ba 95       	dec	r27
     b0a:	c9 f7       	brne	.-14     	; 0xafe <__fixunssfsi+0x12>
     b0c:	12 c0       	rjmp	.+36     	; 0xb32 <__fixunssfsi+0x46>
     b0e:	b1 30       	cpi	r27, 0x01	; 1
     b10:	81 f0       	breq	.+32     	; 0xb32 <__fixunssfsi+0x46>
     b12:	c3 d0       	rcall	.+390    	; 0xc9a <__fp_zero>
     b14:	b1 e0       	ldi	r27, 0x01	; 1
     b16:	08 95       	ret
     b18:	c0 c0       	rjmp	.+384    	; 0xc9a <__fp_zero>
     b1a:	67 2f       	mov	r22, r23
     b1c:	78 2f       	mov	r23, r24
     b1e:	88 27       	eor	r24, r24
     b20:	b8 5f       	subi	r27, 0xF8	; 248
     b22:	39 f0       	breq	.+14     	; 0xb32 <__fixunssfsi+0x46>
     b24:	b9 3f       	cpi	r27, 0xF9	; 249
     b26:	cc f3       	brlt	.-14     	; 0xb1a <__fixunssfsi+0x2e>
     b28:	86 95       	lsr	r24
     b2a:	77 95       	ror	r23
     b2c:	67 95       	ror	r22
     b2e:	b3 95       	inc	r27
     b30:	d9 f7       	brne	.-10     	; 0xb28 <__fixunssfsi+0x3c>
     b32:	3e f4       	brtc	.+14     	; 0xb42 <__fixunssfsi+0x56>
     b34:	90 95       	com	r25
     b36:	80 95       	com	r24
     b38:	70 95       	com	r23
     b3a:	61 95       	neg	r22
     b3c:	7f 4f       	sbci	r23, 0xFF	; 255
     b3e:	8f 4f       	sbci	r24, 0xFF	; 255
     b40:	9f 4f       	sbci	r25, 0xFF	; 255
     b42:	08 95       	ret

00000b44 <__floatunsisf>:
     b44:	e8 94       	clt
     b46:	09 c0       	rjmp	.+18     	; 0xb5a <__floatsisf+0x12>

00000b48 <__floatsisf>:
     b48:	97 fb       	bst	r25, 7
     b4a:	3e f4       	brtc	.+14     	; 0xb5a <__floatsisf+0x12>
     b4c:	90 95       	com	r25
     b4e:	80 95       	com	r24
     b50:	70 95       	com	r23
     b52:	61 95       	neg	r22
     b54:	7f 4f       	sbci	r23, 0xFF	; 255
     b56:	8f 4f       	sbci	r24, 0xFF	; 255
     b58:	9f 4f       	sbci	r25, 0xFF	; 255
     b5a:	99 23       	and	r25, r25
     b5c:	a9 f0       	breq	.+42     	; 0xb88 <__floatsisf+0x40>
     b5e:	f9 2f       	mov	r31, r25
     b60:	96 e9       	ldi	r25, 0x96	; 150
     b62:	bb 27       	eor	r27, r27
     b64:	93 95       	inc	r25
     b66:	f6 95       	lsr	r31
     b68:	87 95       	ror	r24
     b6a:	77 95       	ror	r23
     b6c:	67 95       	ror	r22
     b6e:	b7 95       	ror	r27
     b70:	f1 11       	cpse	r31, r1
     b72:	f8 cf       	rjmp	.-16     	; 0xb64 <__floatsisf+0x1c>
     b74:	fa f4       	brpl	.+62     	; 0xbb4 <__floatsisf+0x6c>
     b76:	bb 0f       	add	r27, r27
     b78:	11 f4       	brne	.+4      	; 0xb7e <__floatsisf+0x36>
     b7a:	60 ff       	sbrs	r22, 0
     b7c:	1b c0       	rjmp	.+54     	; 0xbb4 <__floatsisf+0x6c>
     b7e:	6f 5f       	subi	r22, 0xFF	; 255
     b80:	7f 4f       	sbci	r23, 0xFF	; 255
     b82:	8f 4f       	sbci	r24, 0xFF	; 255
     b84:	9f 4f       	sbci	r25, 0xFF	; 255
     b86:	16 c0       	rjmp	.+44     	; 0xbb4 <__floatsisf+0x6c>
     b88:	88 23       	and	r24, r24
     b8a:	11 f0       	breq	.+4      	; 0xb90 <__floatsisf+0x48>
     b8c:	96 e9       	ldi	r25, 0x96	; 150
     b8e:	11 c0       	rjmp	.+34     	; 0xbb2 <__floatsisf+0x6a>
     b90:	77 23       	and	r23, r23
     b92:	21 f0       	breq	.+8      	; 0xb9c <__floatsisf+0x54>
     b94:	9e e8       	ldi	r25, 0x8E	; 142
     b96:	87 2f       	mov	r24, r23
     b98:	76 2f       	mov	r23, r22
     b9a:	05 c0       	rjmp	.+10     	; 0xba6 <__floatsisf+0x5e>
     b9c:	66 23       	and	r22, r22
     b9e:	71 f0       	breq	.+28     	; 0xbbc <__floatsisf+0x74>
     ba0:	96 e8       	ldi	r25, 0x86	; 134
     ba2:	86 2f       	mov	r24, r22
     ba4:	70 e0       	ldi	r23, 0x00	; 0
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	2a f0       	brmi	.+10     	; 0xbb4 <__floatsisf+0x6c>
     baa:	9a 95       	dec	r25
     bac:	66 0f       	add	r22, r22
     bae:	77 1f       	adc	r23, r23
     bb0:	88 1f       	adc	r24, r24
     bb2:	da f7       	brpl	.-10     	; 0xbaa <__floatsisf+0x62>
     bb4:	88 0f       	add	r24, r24
     bb6:	96 95       	lsr	r25
     bb8:	87 95       	ror	r24
     bba:	97 f9       	bld	r25, 7
     bbc:	08 95       	ret

00000bbe <__fp_cmp>:
     bbe:	99 0f       	add	r25, r25
     bc0:	00 08       	sbc	r0, r0
     bc2:	55 0f       	add	r21, r21
     bc4:	aa 0b       	sbc	r26, r26
     bc6:	e0 e8       	ldi	r30, 0x80	; 128
     bc8:	fe ef       	ldi	r31, 0xFE	; 254
     bca:	16 16       	cp	r1, r22
     bcc:	17 06       	cpc	r1, r23
     bce:	e8 07       	cpc	r30, r24
     bd0:	f9 07       	cpc	r31, r25
     bd2:	c0 f0       	brcs	.+48     	; 0xc04 <__fp_cmp+0x46>
     bd4:	12 16       	cp	r1, r18
     bd6:	13 06       	cpc	r1, r19
     bd8:	e4 07       	cpc	r30, r20
     bda:	f5 07       	cpc	r31, r21
     bdc:	98 f0       	brcs	.+38     	; 0xc04 <__fp_cmp+0x46>
     bde:	62 1b       	sub	r22, r18
     be0:	73 0b       	sbc	r23, r19
     be2:	84 0b       	sbc	r24, r20
     be4:	95 0b       	sbc	r25, r21
     be6:	39 f4       	brne	.+14     	; 0xbf6 <__fp_cmp+0x38>
     be8:	0a 26       	eor	r0, r26
     bea:	61 f0       	breq	.+24     	; 0xc04 <__fp_cmp+0x46>
     bec:	23 2b       	or	r18, r19
     bee:	24 2b       	or	r18, r20
     bf0:	25 2b       	or	r18, r21
     bf2:	21 f4       	brne	.+8      	; 0xbfc <__fp_cmp+0x3e>
     bf4:	08 95       	ret
     bf6:	0a 26       	eor	r0, r26
     bf8:	09 f4       	brne	.+2      	; 0xbfc <__fp_cmp+0x3e>
     bfa:	a1 40       	sbci	r26, 0x01	; 1
     bfc:	a6 95       	lsr	r26
     bfe:	8f ef       	ldi	r24, 0xFF	; 255
     c00:	81 1d       	adc	r24, r1
     c02:	81 1d       	adc	r24, r1
     c04:	08 95       	ret

00000c06 <__fp_inf>:
     c06:	97 f9       	bld	r25, 7
     c08:	9f 67       	ori	r25, 0x7F	; 127
     c0a:	80 e8       	ldi	r24, 0x80	; 128
     c0c:	70 e0       	ldi	r23, 0x00	; 0
     c0e:	60 e0       	ldi	r22, 0x00	; 0
     c10:	08 95       	ret

00000c12 <__fp_nan>:
     c12:	9f ef       	ldi	r25, 0xFF	; 255
     c14:	80 ec       	ldi	r24, 0xC0	; 192
     c16:	08 95       	ret

00000c18 <__fp_pscA>:
     c18:	00 24       	eor	r0, r0
     c1a:	0a 94       	dec	r0
     c1c:	16 16       	cp	r1, r22
     c1e:	17 06       	cpc	r1, r23
     c20:	18 06       	cpc	r1, r24
     c22:	09 06       	cpc	r0, r25
     c24:	08 95       	ret

00000c26 <__fp_pscB>:
     c26:	00 24       	eor	r0, r0
     c28:	0a 94       	dec	r0
     c2a:	12 16       	cp	r1, r18
     c2c:	13 06       	cpc	r1, r19
     c2e:	14 06       	cpc	r1, r20
     c30:	05 06       	cpc	r0, r21
     c32:	08 95       	ret

00000c34 <__fp_round>:
     c34:	09 2e       	mov	r0, r25
     c36:	03 94       	inc	r0
     c38:	00 0c       	add	r0, r0
     c3a:	11 f4       	brne	.+4      	; 0xc40 <__fp_round+0xc>
     c3c:	88 23       	and	r24, r24
     c3e:	52 f0       	brmi	.+20     	; 0xc54 <__fp_round+0x20>
     c40:	bb 0f       	add	r27, r27
     c42:	40 f4       	brcc	.+16     	; 0xc54 <__fp_round+0x20>
     c44:	bf 2b       	or	r27, r31
     c46:	11 f4       	brne	.+4      	; 0xc4c <__fp_round+0x18>
     c48:	60 ff       	sbrs	r22, 0
     c4a:	04 c0       	rjmp	.+8      	; 0xc54 <__fp_round+0x20>
     c4c:	6f 5f       	subi	r22, 0xFF	; 255
     c4e:	7f 4f       	sbci	r23, 0xFF	; 255
     c50:	8f 4f       	sbci	r24, 0xFF	; 255
     c52:	9f 4f       	sbci	r25, 0xFF	; 255
     c54:	08 95       	ret

00000c56 <__fp_split3>:
     c56:	57 fd       	sbrc	r21, 7
     c58:	90 58       	subi	r25, 0x80	; 128
     c5a:	44 0f       	add	r20, r20
     c5c:	55 1f       	adc	r21, r21
     c5e:	59 f0       	breq	.+22     	; 0xc76 <__fp_splitA+0x10>
     c60:	5f 3f       	cpi	r21, 0xFF	; 255
     c62:	71 f0       	breq	.+28     	; 0xc80 <__fp_splitA+0x1a>
     c64:	47 95       	ror	r20

00000c66 <__fp_splitA>:
     c66:	88 0f       	add	r24, r24
     c68:	97 fb       	bst	r25, 7
     c6a:	99 1f       	adc	r25, r25
     c6c:	61 f0       	breq	.+24     	; 0xc86 <__fp_splitA+0x20>
     c6e:	9f 3f       	cpi	r25, 0xFF	; 255
     c70:	79 f0       	breq	.+30     	; 0xc90 <__fp_splitA+0x2a>
     c72:	87 95       	ror	r24
     c74:	08 95       	ret
     c76:	12 16       	cp	r1, r18
     c78:	13 06       	cpc	r1, r19
     c7a:	14 06       	cpc	r1, r20
     c7c:	55 1f       	adc	r21, r21
     c7e:	f2 cf       	rjmp	.-28     	; 0xc64 <__fp_split3+0xe>
     c80:	46 95       	lsr	r20
     c82:	f1 df       	rcall	.-30     	; 0xc66 <__fp_splitA>
     c84:	08 c0       	rjmp	.+16     	; 0xc96 <__fp_splitA+0x30>
     c86:	16 16       	cp	r1, r22
     c88:	17 06       	cpc	r1, r23
     c8a:	18 06       	cpc	r1, r24
     c8c:	99 1f       	adc	r25, r25
     c8e:	f1 cf       	rjmp	.-30     	; 0xc72 <__fp_splitA+0xc>
     c90:	86 95       	lsr	r24
     c92:	71 05       	cpc	r23, r1
     c94:	61 05       	cpc	r22, r1
     c96:	08 94       	sec
     c98:	08 95       	ret

00000c9a <__fp_zero>:
     c9a:	e8 94       	clt

00000c9c <__fp_szero>:
     c9c:	bb 27       	eor	r27, r27
     c9e:	66 27       	eor	r22, r22
     ca0:	77 27       	eor	r23, r23
     ca2:	cb 01       	movw	r24, r22
     ca4:	97 f9       	bld	r25, 7
     ca6:	08 95       	ret

00000ca8 <__gesf2>:
     ca8:	8a df       	rcall	.-236    	; 0xbbe <__fp_cmp>
     caa:	08 f4       	brcc	.+2      	; 0xcae <__gesf2+0x6>
     cac:	8f ef       	ldi	r24, 0xFF	; 255
     cae:	08 95       	ret

00000cb0 <__mulsf3>:
     cb0:	0b d0       	rcall	.+22     	; 0xcc8 <__mulsf3x>
     cb2:	c0 cf       	rjmp	.-128    	; 0xc34 <__fp_round>
     cb4:	b1 df       	rcall	.-158    	; 0xc18 <__fp_pscA>
     cb6:	28 f0       	brcs	.+10     	; 0xcc2 <__mulsf3+0x12>
     cb8:	b6 df       	rcall	.-148    	; 0xc26 <__fp_pscB>
     cba:	18 f0       	brcs	.+6      	; 0xcc2 <__mulsf3+0x12>
     cbc:	95 23       	and	r25, r21
     cbe:	09 f0       	breq	.+2      	; 0xcc2 <__mulsf3+0x12>
     cc0:	a2 cf       	rjmp	.-188    	; 0xc06 <__fp_inf>
     cc2:	a7 cf       	rjmp	.-178    	; 0xc12 <__fp_nan>
     cc4:	11 24       	eor	r1, r1
     cc6:	ea cf       	rjmp	.-44     	; 0xc9c <__fp_szero>

00000cc8 <__mulsf3x>:
     cc8:	c6 df       	rcall	.-116    	; 0xc56 <__fp_split3>
     cca:	a0 f3       	brcs	.-24     	; 0xcb4 <__mulsf3+0x4>

00000ccc <__mulsf3_pse>:
     ccc:	95 9f       	mul	r25, r21
     cce:	d1 f3       	breq	.-12     	; 0xcc4 <__mulsf3+0x14>
     cd0:	95 0f       	add	r25, r21
     cd2:	50 e0       	ldi	r21, 0x00	; 0
     cd4:	55 1f       	adc	r21, r21
     cd6:	62 9f       	mul	r22, r18
     cd8:	f0 01       	movw	r30, r0
     cda:	72 9f       	mul	r23, r18
     cdc:	bb 27       	eor	r27, r27
     cde:	f0 0d       	add	r31, r0
     ce0:	b1 1d       	adc	r27, r1
     ce2:	63 9f       	mul	r22, r19
     ce4:	aa 27       	eor	r26, r26
     ce6:	f0 0d       	add	r31, r0
     ce8:	b1 1d       	adc	r27, r1
     cea:	aa 1f       	adc	r26, r26
     cec:	64 9f       	mul	r22, r20
     cee:	66 27       	eor	r22, r22
     cf0:	b0 0d       	add	r27, r0
     cf2:	a1 1d       	adc	r26, r1
     cf4:	66 1f       	adc	r22, r22
     cf6:	82 9f       	mul	r24, r18
     cf8:	22 27       	eor	r18, r18
     cfa:	b0 0d       	add	r27, r0
     cfc:	a1 1d       	adc	r26, r1
     cfe:	62 1f       	adc	r22, r18
     d00:	73 9f       	mul	r23, r19
     d02:	b0 0d       	add	r27, r0
     d04:	a1 1d       	adc	r26, r1
     d06:	62 1f       	adc	r22, r18
     d08:	83 9f       	mul	r24, r19
     d0a:	a0 0d       	add	r26, r0
     d0c:	61 1d       	adc	r22, r1
     d0e:	22 1f       	adc	r18, r18
     d10:	74 9f       	mul	r23, r20
     d12:	33 27       	eor	r19, r19
     d14:	a0 0d       	add	r26, r0
     d16:	61 1d       	adc	r22, r1
     d18:	23 1f       	adc	r18, r19
     d1a:	84 9f       	mul	r24, r20
     d1c:	60 0d       	add	r22, r0
     d1e:	21 1d       	adc	r18, r1
     d20:	82 2f       	mov	r24, r18
     d22:	76 2f       	mov	r23, r22
     d24:	6a 2f       	mov	r22, r26
     d26:	11 24       	eor	r1, r1
     d28:	9f 57       	subi	r25, 0x7F	; 127
     d2a:	50 40       	sbci	r21, 0x00	; 0
     d2c:	8a f0       	brmi	.+34     	; 0xd50 <__mulsf3_pse+0x84>
     d2e:	e1 f0       	breq	.+56     	; 0xd68 <__mulsf3_pse+0x9c>
     d30:	88 23       	and	r24, r24
     d32:	4a f0       	brmi	.+18     	; 0xd46 <__mulsf3_pse+0x7a>
     d34:	ee 0f       	add	r30, r30
     d36:	ff 1f       	adc	r31, r31
     d38:	bb 1f       	adc	r27, r27
     d3a:	66 1f       	adc	r22, r22
     d3c:	77 1f       	adc	r23, r23
     d3e:	88 1f       	adc	r24, r24
     d40:	91 50       	subi	r25, 0x01	; 1
     d42:	50 40       	sbci	r21, 0x00	; 0
     d44:	a9 f7       	brne	.-22     	; 0xd30 <__mulsf3_pse+0x64>
     d46:	9e 3f       	cpi	r25, 0xFE	; 254
     d48:	51 05       	cpc	r21, r1
     d4a:	70 f0       	brcs	.+28     	; 0xd68 <__mulsf3_pse+0x9c>
     d4c:	5c cf       	rjmp	.-328    	; 0xc06 <__fp_inf>
     d4e:	a6 cf       	rjmp	.-180    	; 0xc9c <__fp_szero>
     d50:	5f 3f       	cpi	r21, 0xFF	; 255
     d52:	ec f3       	brlt	.-6      	; 0xd4e <__mulsf3_pse+0x82>
     d54:	98 3e       	cpi	r25, 0xE8	; 232
     d56:	dc f3       	brlt	.-10     	; 0xd4e <__mulsf3_pse+0x82>
     d58:	86 95       	lsr	r24
     d5a:	77 95       	ror	r23
     d5c:	67 95       	ror	r22
     d5e:	b7 95       	ror	r27
     d60:	f7 95       	ror	r31
     d62:	e7 95       	ror	r30
     d64:	9f 5f       	subi	r25, 0xFF	; 255
     d66:	c1 f7       	brne	.-16     	; 0xd58 <__mulsf3_pse+0x8c>
     d68:	fe 2b       	or	r31, r30
     d6a:	88 0f       	add	r24, r24
     d6c:	91 1d       	adc	r25, r1
     d6e:	96 95       	lsr	r25
     d70:	87 95       	ror	r24
     d72:	97 f9       	bld	r25, 7
     d74:	08 95       	ret

00000d76 <malloc>:
     d76:	cf 93       	push	r28
     d78:	df 93       	push	r29
     d7a:	82 30       	cpi	r24, 0x02	; 2
     d7c:	91 05       	cpc	r25, r1
     d7e:	10 f4       	brcc	.+4      	; 0xd84 <malloc+0xe>
     d80:	82 e0       	ldi	r24, 0x02	; 2
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	e0 91 81 03 	lds	r30, 0x0381
     d88:	f0 91 82 03 	lds	r31, 0x0382
     d8c:	20 e0       	ldi	r18, 0x00	; 0
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	a0 e0       	ldi	r26, 0x00	; 0
     d92:	b0 e0       	ldi	r27, 0x00	; 0
     d94:	30 97       	sbiw	r30, 0x00	; 0
     d96:	39 f1       	breq	.+78     	; 0xde6 <malloc+0x70>
     d98:	40 81       	ld	r20, Z
     d9a:	51 81       	ldd	r21, Z+1	; 0x01
     d9c:	48 17       	cp	r20, r24
     d9e:	59 07       	cpc	r21, r25
     da0:	b8 f0       	brcs	.+46     	; 0xdd0 <malloc+0x5a>
     da2:	48 17       	cp	r20, r24
     da4:	59 07       	cpc	r21, r25
     da6:	71 f4       	brne	.+28     	; 0xdc4 <malloc+0x4e>
     da8:	82 81       	ldd	r24, Z+2	; 0x02
     daa:	93 81       	ldd	r25, Z+3	; 0x03
     dac:	10 97       	sbiw	r26, 0x00	; 0
     dae:	29 f0       	breq	.+10     	; 0xdba <malloc+0x44>
     db0:	13 96       	adiw	r26, 0x03	; 3
     db2:	9c 93       	st	X, r25
     db4:	8e 93       	st	-X, r24
     db6:	12 97       	sbiw	r26, 0x02	; 2
     db8:	2c c0       	rjmp	.+88     	; 0xe12 <malloc+0x9c>
     dba:	90 93 82 03 	sts	0x0382, r25
     dbe:	80 93 81 03 	sts	0x0381, r24
     dc2:	27 c0       	rjmp	.+78     	; 0xe12 <malloc+0x9c>
     dc4:	21 15       	cp	r18, r1
     dc6:	31 05       	cpc	r19, r1
     dc8:	31 f0       	breq	.+12     	; 0xdd6 <malloc+0x60>
     dca:	42 17       	cp	r20, r18
     dcc:	53 07       	cpc	r21, r19
     dce:	18 f0       	brcs	.+6      	; 0xdd6 <malloc+0x60>
     dd0:	a9 01       	movw	r20, r18
     dd2:	db 01       	movw	r26, r22
     dd4:	01 c0       	rjmp	.+2      	; 0xdd8 <malloc+0x62>
     dd6:	ef 01       	movw	r28, r30
     dd8:	9a 01       	movw	r18, r20
     dda:	bd 01       	movw	r22, r26
     ddc:	df 01       	movw	r26, r30
     dde:	02 80       	ldd	r0, Z+2	; 0x02
     de0:	f3 81       	ldd	r31, Z+3	; 0x03
     de2:	e0 2d       	mov	r30, r0
     de4:	d7 cf       	rjmp	.-82     	; 0xd94 <malloc+0x1e>
     de6:	21 15       	cp	r18, r1
     de8:	31 05       	cpc	r19, r1
     dea:	f9 f0       	breq	.+62     	; 0xe2a <malloc+0xb4>
     dec:	28 1b       	sub	r18, r24
     dee:	39 0b       	sbc	r19, r25
     df0:	24 30       	cpi	r18, 0x04	; 4
     df2:	31 05       	cpc	r19, r1
     df4:	80 f4       	brcc	.+32     	; 0xe16 <malloc+0xa0>
     df6:	8a 81       	ldd	r24, Y+2	; 0x02
     df8:	9b 81       	ldd	r25, Y+3	; 0x03
     dfa:	61 15       	cp	r22, r1
     dfc:	71 05       	cpc	r23, r1
     dfe:	21 f0       	breq	.+8      	; 0xe08 <malloc+0x92>
     e00:	fb 01       	movw	r30, r22
     e02:	93 83       	std	Z+3, r25	; 0x03
     e04:	82 83       	std	Z+2, r24	; 0x02
     e06:	04 c0       	rjmp	.+8      	; 0xe10 <malloc+0x9a>
     e08:	90 93 82 03 	sts	0x0382, r25
     e0c:	80 93 81 03 	sts	0x0381, r24
     e10:	fe 01       	movw	r30, r28
     e12:	32 96       	adiw	r30, 0x02	; 2
     e14:	44 c0       	rjmp	.+136    	; 0xe9e <malloc+0x128>
     e16:	fe 01       	movw	r30, r28
     e18:	e2 0f       	add	r30, r18
     e1a:	f3 1f       	adc	r31, r19
     e1c:	81 93       	st	Z+, r24
     e1e:	91 93       	st	Z+, r25
     e20:	22 50       	subi	r18, 0x02	; 2
     e22:	31 09       	sbc	r19, r1
     e24:	39 83       	std	Y+1, r19	; 0x01
     e26:	28 83       	st	Y, r18
     e28:	3a c0       	rjmp	.+116    	; 0xe9e <malloc+0x128>
     e2a:	20 91 7f 03 	lds	r18, 0x037F
     e2e:	30 91 80 03 	lds	r19, 0x0380
     e32:	23 2b       	or	r18, r19
     e34:	41 f4       	brne	.+16     	; 0xe46 <malloc+0xd0>
     e36:	20 91 02 01 	lds	r18, 0x0102
     e3a:	30 91 03 01 	lds	r19, 0x0103
     e3e:	30 93 80 03 	sts	0x0380, r19
     e42:	20 93 7f 03 	sts	0x037F, r18
     e46:	20 91 00 01 	lds	r18, 0x0100
     e4a:	30 91 01 01 	lds	r19, 0x0101
     e4e:	21 15       	cp	r18, r1
     e50:	31 05       	cpc	r19, r1
     e52:	41 f4       	brne	.+16     	; 0xe64 <malloc+0xee>
     e54:	2d b7       	in	r18, 0x3d	; 61
     e56:	3e b7       	in	r19, 0x3e	; 62
     e58:	40 91 04 01 	lds	r20, 0x0104
     e5c:	50 91 05 01 	lds	r21, 0x0105
     e60:	24 1b       	sub	r18, r20
     e62:	35 0b       	sbc	r19, r21
     e64:	e0 91 7f 03 	lds	r30, 0x037F
     e68:	f0 91 80 03 	lds	r31, 0x0380
     e6c:	e2 17       	cp	r30, r18
     e6e:	f3 07       	cpc	r31, r19
     e70:	a0 f4       	brcc	.+40     	; 0xe9a <malloc+0x124>
     e72:	2e 1b       	sub	r18, r30
     e74:	3f 0b       	sbc	r19, r31
     e76:	28 17       	cp	r18, r24
     e78:	39 07       	cpc	r19, r25
     e7a:	78 f0       	brcs	.+30     	; 0xe9a <malloc+0x124>
     e7c:	ac 01       	movw	r20, r24
     e7e:	4e 5f       	subi	r20, 0xFE	; 254
     e80:	5f 4f       	sbci	r21, 0xFF	; 255
     e82:	24 17       	cp	r18, r20
     e84:	35 07       	cpc	r19, r21
     e86:	48 f0       	brcs	.+18     	; 0xe9a <malloc+0x124>
     e88:	4e 0f       	add	r20, r30
     e8a:	5f 1f       	adc	r21, r31
     e8c:	50 93 80 03 	sts	0x0380, r21
     e90:	40 93 7f 03 	sts	0x037F, r20
     e94:	81 93       	st	Z+, r24
     e96:	91 93       	st	Z+, r25
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <malloc+0x128>
     e9a:	e0 e0       	ldi	r30, 0x00	; 0
     e9c:	f0 e0       	ldi	r31, 0x00	; 0
     e9e:	cf 01       	movw	r24, r30
     ea0:	df 91       	pop	r29
     ea2:	cf 91       	pop	r28
     ea4:	08 95       	ret

00000ea6 <free>:
     ea6:	cf 93       	push	r28
     ea8:	df 93       	push	r29
     eaa:	00 97       	sbiw	r24, 0x00	; 0
     eac:	09 f4       	brne	.+2      	; 0xeb0 <free+0xa>
     eae:	87 c0       	rjmp	.+270    	; 0xfbe <free+0x118>
     eb0:	fc 01       	movw	r30, r24
     eb2:	32 97       	sbiw	r30, 0x02	; 2
     eb4:	13 82       	std	Z+3, r1	; 0x03
     eb6:	12 82       	std	Z+2, r1	; 0x02
     eb8:	c0 91 81 03 	lds	r28, 0x0381
     ebc:	d0 91 82 03 	lds	r29, 0x0382
     ec0:	20 97       	sbiw	r28, 0x00	; 0
     ec2:	81 f4       	brne	.+32     	; 0xee4 <free+0x3e>
     ec4:	20 81       	ld	r18, Z
     ec6:	31 81       	ldd	r19, Z+1	; 0x01
     ec8:	28 0f       	add	r18, r24
     eca:	39 1f       	adc	r19, r25
     ecc:	80 91 7f 03 	lds	r24, 0x037F
     ed0:	90 91 80 03 	lds	r25, 0x0380
     ed4:	82 17       	cp	r24, r18
     ed6:	93 07       	cpc	r25, r19
     ed8:	79 f5       	brne	.+94     	; 0xf38 <free+0x92>
     eda:	f0 93 80 03 	sts	0x0380, r31
     ede:	e0 93 7f 03 	sts	0x037F, r30
     ee2:	6d c0       	rjmp	.+218    	; 0xfbe <free+0x118>
     ee4:	de 01       	movw	r26, r28
     ee6:	20 e0       	ldi	r18, 0x00	; 0
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	ae 17       	cp	r26, r30
     eec:	bf 07       	cpc	r27, r31
     eee:	50 f4       	brcc	.+20     	; 0xf04 <free+0x5e>
     ef0:	12 96       	adiw	r26, 0x02	; 2
     ef2:	4d 91       	ld	r20, X+
     ef4:	5c 91       	ld	r21, X
     ef6:	13 97       	sbiw	r26, 0x03	; 3
     ef8:	9d 01       	movw	r18, r26
     efa:	41 15       	cp	r20, r1
     efc:	51 05       	cpc	r21, r1
     efe:	09 f1       	breq	.+66     	; 0xf42 <free+0x9c>
     f00:	da 01       	movw	r26, r20
     f02:	f3 cf       	rjmp	.-26     	; 0xeea <free+0x44>
     f04:	b3 83       	std	Z+3, r27	; 0x03
     f06:	a2 83       	std	Z+2, r26	; 0x02
     f08:	40 81       	ld	r20, Z
     f0a:	51 81       	ldd	r21, Z+1	; 0x01
     f0c:	84 0f       	add	r24, r20
     f0e:	95 1f       	adc	r25, r21
     f10:	8a 17       	cp	r24, r26
     f12:	9b 07       	cpc	r25, r27
     f14:	71 f4       	brne	.+28     	; 0xf32 <free+0x8c>
     f16:	8d 91       	ld	r24, X+
     f18:	9c 91       	ld	r25, X
     f1a:	11 97       	sbiw	r26, 0x01	; 1
     f1c:	84 0f       	add	r24, r20
     f1e:	95 1f       	adc	r25, r21
     f20:	02 96       	adiw	r24, 0x02	; 2
     f22:	91 83       	std	Z+1, r25	; 0x01
     f24:	80 83       	st	Z, r24
     f26:	12 96       	adiw	r26, 0x02	; 2
     f28:	8d 91       	ld	r24, X+
     f2a:	9c 91       	ld	r25, X
     f2c:	13 97       	sbiw	r26, 0x03	; 3
     f2e:	93 83       	std	Z+3, r25	; 0x03
     f30:	82 83       	std	Z+2, r24	; 0x02
     f32:	21 15       	cp	r18, r1
     f34:	31 05       	cpc	r19, r1
     f36:	29 f4       	brne	.+10     	; 0xf42 <free+0x9c>
     f38:	f0 93 82 03 	sts	0x0382, r31
     f3c:	e0 93 81 03 	sts	0x0381, r30
     f40:	3e c0       	rjmp	.+124    	; 0xfbe <free+0x118>
     f42:	d9 01       	movw	r26, r18
     f44:	13 96       	adiw	r26, 0x03	; 3
     f46:	fc 93       	st	X, r31
     f48:	ee 93       	st	-X, r30
     f4a:	12 97       	sbiw	r26, 0x02	; 2
     f4c:	4d 91       	ld	r20, X+
     f4e:	5d 91       	ld	r21, X+
     f50:	a4 0f       	add	r26, r20
     f52:	b5 1f       	adc	r27, r21
     f54:	ea 17       	cp	r30, r26
     f56:	fb 07       	cpc	r31, r27
     f58:	79 f4       	brne	.+30     	; 0xf78 <free+0xd2>
     f5a:	80 81       	ld	r24, Z
     f5c:	91 81       	ldd	r25, Z+1	; 0x01
     f5e:	84 0f       	add	r24, r20
     f60:	95 1f       	adc	r25, r21
     f62:	02 96       	adiw	r24, 0x02	; 2
     f64:	d9 01       	movw	r26, r18
     f66:	11 96       	adiw	r26, 0x01	; 1
     f68:	9c 93       	st	X, r25
     f6a:	8e 93       	st	-X, r24
     f6c:	82 81       	ldd	r24, Z+2	; 0x02
     f6e:	93 81       	ldd	r25, Z+3	; 0x03
     f70:	13 96       	adiw	r26, 0x03	; 3
     f72:	9c 93       	st	X, r25
     f74:	8e 93       	st	-X, r24
     f76:	12 97       	sbiw	r26, 0x02	; 2
     f78:	e0 e0       	ldi	r30, 0x00	; 0
     f7a:	f0 e0       	ldi	r31, 0x00	; 0
     f7c:	8a 81       	ldd	r24, Y+2	; 0x02
     f7e:	9b 81       	ldd	r25, Y+3	; 0x03
     f80:	00 97       	sbiw	r24, 0x00	; 0
     f82:	19 f0       	breq	.+6      	; 0xf8a <free+0xe4>
     f84:	fe 01       	movw	r30, r28
     f86:	ec 01       	movw	r28, r24
     f88:	f9 cf       	rjmp	.-14     	; 0xf7c <free+0xd6>
     f8a:	ce 01       	movw	r24, r28
     f8c:	02 96       	adiw	r24, 0x02	; 2
     f8e:	28 81       	ld	r18, Y
     f90:	39 81       	ldd	r19, Y+1	; 0x01
     f92:	82 0f       	add	r24, r18
     f94:	93 1f       	adc	r25, r19
     f96:	20 91 7f 03 	lds	r18, 0x037F
     f9a:	30 91 80 03 	lds	r19, 0x0380
     f9e:	28 17       	cp	r18, r24
     fa0:	39 07       	cpc	r19, r25
     fa2:	69 f4       	brne	.+26     	; 0xfbe <free+0x118>
     fa4:	30 97       	sbiw	r30, 0x00	; 0
     fa6:	29 f4       	brne	.+10     	; 0xfb2 <free+0x10c>
     fa8:	10 92 82 03 	sts	0x0382, r1
     fac:	10 92 81 03 	sts	0x0381, r1
     fb0:	02 c0       	rjmp	.+4      	; 0xfb6 <free+0x110>
     fb2:	13 82       	std	Z+3, r1	; 0x03
     fb4:	12 82       	std	Z+2, r1	; 0x02
     fb6:	d0 93 80 03 	sts	0x0380, r29
     fba:	c0 93 7f 03 	sts	0x037F, r28
     fbe:	df 91       	pop	r29
     fc0:	cf 91       	pop	r28
     fc2:	08 95       	ret

00000fc4 <memset>:
     fc4:	dc 01       	movw	r26, r24
     fc6:	01 c0       	rjmp	.+2      	; 0xfca <memset+0x6>
     fc8:	6d 93       	st	X+, r22
     fca:	41 50       	subi	r20, 0x01	; 1
     fcc:	50 40       	sbci	r21, 0x00	; 0
     fce:	e0 f7       	brcc	.-8      	; 0xfc8 <memset+0x4>
     fd0:	08 95       	ret

00000fd2 <strcat>:
     fd2:	fb 01       	movw	r30, r22
     fd4:	dc 01       	movw	r26, r24
     fd6:	0d 90       	ld	r0, X+
     fd8:	00 20       	and	r0, r0
     fda:	e9 f7       	brne	.-6      	; 0xfd6 <strcat+0x4>
     fdc:	11 97       	sbiw	r26, 0x01	; 1
     fde:	01 90       	ld	r0, Z+
     fe0:	0d 92       	st	X+, r0
     fe2:	00 20       	and	r0, r0
     fe4:	e1 f7       	brne	.-8      	; 0xfde <strcat+0xc>
     fe6:	08 95       	ret

00000fe8 <strcpy>:
     fe8:	fb 01       	movw	r30, r22
     fea:	dc 01       	movw	r26, r24
     fec:	01 90       	ld	r0, Z+
     fee:	0d 92       	st	X+, r0
     ff0:	00 20       	and	r0, r0
     ff2:	e1 f7       	brne	.-8      	; 0xfec <strcpy+0x4>
     ff4:	08 95       	ret

00000ff6 <__eerd_block_m1284>:
     ff6:	dc 01       	movw	r26, r24
     ff8:	cb 01       	movw	r24, r22

00000ffa <__eerd_blraw_m1284>:
     ffa:	fc 01       	movw	r30, r24
     ffc:	f9 99       	sbic	0x1f, 1	; 31
     ffe:	fe cf       	rjmp	.-4      	; 0xffc <__eerd_blraw_m1284+0x2>
    1000:	06 c0       	rjmp	.+12     	; 0x100e <__eerd_blraw_m1284+0x14>
    1002:	f2 bd       	out	0x22, r31	; 34
    1004:	e1 bd       	out	0x21, r30	; 33
    1006:	f8 9a       	sbi	0x1f, 0	; 31
    1008:	31 96       	adiw	r30, 0x01	; 1
    100a:	00 b4       	in	r0, 0x20	; 32
    100c:	0d 92       	st	X+, r0
    100e:	41 50       	subi	r20, 0x01	; 1
    1010:	50 40       	sbci	r21, 0x00	; 0
    1012:	b8 f7       	brcc	.-18     	; 0x1002 <__eerd_blraw_m1284+0x8>
    1014:	08 95       	ret

00001016 <__eeupd_block_m1284>:
    1016:	dc 01       	movw	r26, r24
    1018:	a4 0f       	add	r26, r20
    101a:	b5 1f       	adc	r27, r21
    101c:	41 50       	subi	r20, 0x01	; 1
    101e:	50 40       	sbci	r21, 0x00	; 0
    1020:	40 f0       	brcs	.+16     	; 0x1032 <__eeupd_block_m1284+0x1c>
    1022:	cb 01       	movw	r24, r22
    1024:	84 0f       	add	r24, r20
    1026:	95 1f       	adc	r25, r21
    1028:	2e 91       	ld	r18, -X
    102a:	05 d0       	rcall	.+10     	; 0x1036 <__eeupd_r18_m1284>
    102c:	41 50       	subi	r20, 0x01	; 1
    102e:	50 40       	sbci	r21, 0x00	; 0
    1030:	d8 f7       	brcc	.-10     	; 0x1028 <__eeupd_block_m1284+0x12>
    1032:	08 95       	ret

00001034 <__eeupd_byte_m1284>:
    1034:	26 2f       	mov	r18, r22

00001036 <__eeupd_r18_m1284>:
    1036:	f9 99       	sbic	0x1f, 1	; 31
    1038:	fe cf       	rjmp	.-4      	; 0x1036 <__eeupd_r18_m1284>
    103a:	92 bd       	out	0x22, r25	; 34
    103c:	81 bd       	out	0x21, r24	; 33
    103e:	f8 9a       	sbi	0x1f, 0	; 31
    1040:	01 97       	sbiw	r24, 0x01	; 1
    1042:	00 b4       	in	r0, 0x20	; 32
    1044:	02 16       	cp	r0, r18
    1046:	39 f0       	breq	.+14     	; 0x1056 <__eeupd_r18_m1284+0x20>
    1048:	1f ba       	out	0x1f, r1	; 31
    104a:	20 bd       	out	0x20, r18	; 32
    104c:	0f b6       	in	r0, 0x3f	; 63
    104e:	f8 94       	cli
    1050:	fa 9a       	sbi	0x1f, 2	; 31
    1052:	f9 9a       	sbi	0x1f, 1	; 31
    1054:	0f be       	out	0x3f, r0	; 63
    1056:	08 95       	ret

00001058 <_exit>:
    1058:	f8 94       	cli

0000105a <__stop_program>:
    105a:	ff cf       	rjmp	.-2      	; 0x105a <__stop_program>
